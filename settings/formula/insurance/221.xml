<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<formula name="7SH_gamma" value="0.048" desc="疾病入院給付金部分"/>
		<formula name="70_gamma" value="0.039" desc="手術等給付金部分"/>
		<formula name="beta" value="0.15" desc="集金費beta"/>
		<formula name="zeta" value="0.025" desc="集金費zeta"/>
		<formula name="epsilon" paras="m" desc="P免費用">
			if(m&lt;=5){
				0.00075
			}elseIf(m&gt;5&amp;&amp;m&lt;=10){
				0.0015
			}else{
				0.003
			}
		</formula>
		<!--統計側用予定解約率 -->
		<formula name="qwt" paras="kisoritsu" desc="予定解約率">
			if(t&lt;m){
				if(kisoritsu==0){
					0.03
				}else{
					0.015
				}
			}else{
				if(kisoritsu==0){
					0.001
				}else{
					0.0
				}
			}
		</formula>
	</BizExpenses>
	<Common desc="商品内部の共通公式">
		<formula name="m1">if(m==99){omega-x+1}else{m}</formula>
		<formula name="n1">if(n==99){omega-x+1}else{n}</formula>
		
		<formula name="7SH_MT" paras="x" desc="7SH_MT給付日付に応じて基数を返す">
			if(hospitalDays==30){
				7SH_MT30[x]
			}elseIf(hospitalDays==60){
				7SH_MT60[x]
			}else{
				7SH_MT120[x]
			}
		</formula>
		<formula name="7SH_Mt" paras="x" desc="7SH_Mt給付日付に応じて基数を返す">
			if(hospitalDays==30){
				7SH_Mt30[x]
			}elseIf(hospitalDays==60){
				7SH_Mt60[x]
			}else{
				7SH_Mt120[x]
			}
		</formula>
		<formula name="at_x_n" paras="x,n" fraction="5">
			(Nt[x]-Nt[x+n])/Dt[x]
		</formula>
		<formula name="anashu_x_n" paras="x,n" fraction="5">
			aT_x_n(x,m1)+DT[x+m1]/DT[x]*at_x_n(x+m1,n-m1)
		</formula>
		<formula name="mt_atau_xt_nm" paras="x,n,m,t" fraction="5" desc="始期払k回年金現価">
			if(n==m){
				(NT[x+m]-NT[x+n])/DT[x+t]
			}elseIf(n&gt;m&amp;&amp;t&lt;m){
				DT[x+m]/DT[x+t]*(Nt[x+m]-Nt[x+n])/Dt[x+m]	
			}else{
				0
			}
		</formula>
		<formula name="m_atau_x_nm" paras="m,x,n" fraction="5">
			if(n==m){
				(NT[x+m]-NT[x+n])/DT[x]
			}elseIf(n&gt;m){
				DT[x+m]/DT[x]*((Nt[x+m]-Nt[x+n])/Dt[x+m])
			}else{
				0
			}
		</formula>
		
		<formula name="7SH_Ai_x_n" paras="x,n" fraction="6" desc="給付現価7SH_Ai_x_n">
			(7SH_MT(x)-7SH_MT(x+m1))/DT[x]+DT[x+m1]/DT[x]*(7SH_Mt(x+m1)-7SH_Mt(x+n))/Dt[x+m1]		
		</formula>
		<formula name="7SH_Ai_xt_nt" paras="x,n,t" fraction="6" desc="給付現価7SH_Ai_xt_nt">
			if(n==m1){
				(7SH_MT(x+t)-7SH_MT(x+n))/DT[x+t]
			}elseIf(n&gt;m1&amp;&amp;t&lt;m1){
				(7SH_MT(x+t)-7SH_MT(x+m1))/DT[x+t]+DT[x+m1]/DT[x+t]*(7SH_Mt(x+m1)-7SH_Mt(x+n))/Dt[x+m1]
			}else{
				(7SH_Mt(x+t)-7SH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		<formula name="70_A_x_n" paras="x,n" fraction="6" desc="給付現価70_A_x_n">
			(7O_MT[x]-7O_MT[x+m1])/DT[x]+DT[x+m1]/DT[x]*(7O_Mt[x+m1]-7O_Mt[x+n])/Dt[x+m1]
		</formula>
		<formula name="70_A_xt_nt" paras="x,n,t" fraction="6" desc="給付現価70_A_xt_nt">
			if(n==m1){
				(7O_MT[x+t]-7O_MT[x+n])/DT[x+t]
			}elseIf(n&gt;m1&amp;&amp;t&lt;m1){
				(7O_MT[x+t]-7O_MT[x+m1])/DT[x+t]+DT[x+m1]/DT[x+t]*(7O_Mt[x+m1]-7O_Mt[x+n])/Dt[x+m1]
			}else{
				(7O_Mt[x+t]-7O_Mt[x+n])/Dt[x+t]
			}
		</formula>
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="3"
			desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){
					0
				}elseIf(kaisu==2){
					12*d
				}elseIf(kaisu==3){
					6*d
				}else{
					d
				}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>

		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			round(1/SBasePrate,2)
		</formula>
	</Common>
	
	<Premium desc="保険料">		
		<formula name="stdPrate" pvh="P" fraction="3" accessable="false" desc="基準Ｐレート">
			{7SH_Ai_x_n(x,n1)+10*70_A_x_n(x,n1)+(7SH_gamma+70_gamma)*anashu_x_n(x,n1)}
							/
			(12*(1-beta-zeta-epsilon(m1))*aT12_x_n(x,m1))
		</formula>
		
		<formula name="Prate" pvh="P" accessable="true" desc="１.保険料レート">
			PrateByPaymode(stdPrate,0)	
		</formula>		
		<formula name="Premium" pvh="P" accessable="true" desc="２.保険料/保険金額">
			if(sptate==0){
				<!--Ｐレートはゼロより小さい場合、ゼロとする  -->
				roundDown(SA*max{PrateByPaymode(stdPrate,0),0},0)
			}else{
			   roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,0)),0)/1000,0)*1000
			}

		</formula>
	</Premium>

	<ReserveFund desc="保険積立金">
		<formula name="MultiV" paras="t" desc="払込中VTレート">
			max(
				7SH_Ai_xt_nt(x,n1,t)+10*70_A_xt_nt(x,n1,t)+(7SH_gamma+70_gamma)*mt_atau_xt_nm(x,n1,m1,t)
					-
				(7SH_Ai_x_n(x,n1)+10*70_A_x_n(x,n1)+(7SH_gamma+70_gamma)*m_atau_x_nm(m1,x,n1))/aT_x_n(x,m1)*aT_xt_nt(x,m1,t)
			,0)
		</formula>
		<formula name="PaymentEndV" paras="t" desc="払込期間終了後のVTレート">
			7SH_Ai_xt_nt(x,n1,t)+10*70_A_xt_nt(x,n1,t)+(7SH_gamma+70_gamma)*at_x_n(x+t,n1-t)
		</formula>
		
		<formula name="Exemption" paras="t" desc="保険料免除">
			<!-- 事業末の免除状態の予定解約率は（保険料払込期間終了後）を使用する。 -->
			7SH_Ai_xt_nt_E(x,n1,t)+10*70_A_xt_nt_E(x,n1,t)+(7SH_gamma+70_gamma)*at_x_n(x+t,n1-t)
		</formula>
		
		<formula name="7SH_Ai_xt_nt_E" paras="x,n,t" fraction="6" desc="給付現価7SH_Ai_xt_nt(免除)">
			if(n&gt;m1&amp;&amp;t&lt;m1){
				(7SH_Mt(x+t)-7SH_Mt(x+m1))/Dt[x+t]+Dt[x+m1]/Dt[x+t]*(7SH_Mt(x+m1)-7SH_Mt(x+n))/Dt[x+m1]
			}else{
				(7SH_Mt(x+t)-7SH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		
		<formula name="70_A_xt_nt_E" paras="x,n,t" fraction="6" desc="給付現価70_A_xt_nt(免除)">
			if(n&gt;m1&amp;&amp;t&lt;m1){
				(7O_Mt[x+t]-7O_Mt[x+m1])/Dt[x+t]+Dt[x+m1]/Dt[x+t]*(7O_Mt[x+m1]-7O_Mt[x+n])/Dt[x+m1]
			}else{
				(7O_Mt[x+t]-7O_Mt[x+n])/Dt[x+t]
			}
		</formula>
		
		<formula name="Vrate_accu" paras="t" desc="保険年度Vrate">
			if(state==1){
				<!-- 払込期間中 -->
				MultiV(t)
			}elseIf(state==2){
				<!-- 保険料払込期間終了後 -->
				PaymentEndV(t)
			}else{
				0
			}
		</formula>
		<formula name="Vrate" pvh="H" fraction="2" accessable="true" desc="１.保険年度末Ｖレート">
			Vrate_accu(t)
		</formula>
		
		<formula name="PrateByYear" pvh="P" fraction="3" desc="年払Prate">
			stdPrate*PayFactor(2,gen,1)
		</formula>
		
		<formula name="BizYearV" paras="t"  fraction="2" accessable="false" desc="事業末Vレート">
			if(state==1){
				if(round((7SH_Ai_x_n(x,n1)+10*70_A_x_n(x,n1)+(7SH_gamma+70_gamma)*m_atau_x_nm(m1,x,n1))/aT_x_n(x,m1),3)&lt;=PrateByYear){
					MultiV(t)
				}else{
					max(
					7SH_Ai_xt_nt(x,n1,t)+10*70_A_xt_nt(x,n1,t)+(7SH_gamma+70_gamma)*mt_atau_xt_nm(x,n1,m1,t)
						- 
					PrateByYear*aT_xt_nt(x,m1,t)	
					,0)
				}
			}elseIf(state==2){
				PaymentEndV(t)
			}elseIf(state==6){
				Exemption(t)
			}else{
				0
			}
		</formula>

		<formula name="BizYearVate" pvh="if(kisoritsu==0){P}elseIf(kisoritsu==1){V}else{H}" accessable="true" desc="２．事業年度末Vレート">
			BizYearV(t)
		</formula>
				
		<formula name="ContractorYearV" fraction="2" pvh="P" paras="t" desc="保険年度契約者VTレート">
			Vrate_accu(t)
		</formula>

		<formula name="ContractorVrate" fraction="2" pvh="P" accessable="true" desc="３.契約者用Ｖレート">
			if(state==1){
				<!-- 払込期間中 -->
				(1-f_12(f1))*ContractorYearV(t1)+(f_12(f1))*ContractorYearV(t1+1)
			}elseIf(state==2){
				<!-- 保険料払込期間終了後 -->
				(1-f_12(f))*ContractorYearV(t)+(f_12(f))*ContractorYearV(t+1)
			}else{
				0
			}
		</formula>
		
	</ReserveFund>
	
	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate">
			0
		</formula>
		<formula name="Wrate" pvh="P" accessable="true" desc="１.解約返戻金Ｗレート">
			0
		</formula>
	</SurrenderFee>
</Formula-definition>