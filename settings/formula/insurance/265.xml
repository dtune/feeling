<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>

	<BizExpenses desc="事業費率の設定">
		<formula name="zeta">
			if(gen==2){0.030}else{0.025}
		</formula>
		<formula name="gamma" value="0.0007"/>
		<formula name="beta" value="0.10"/>
		<formula name="beta_nashu" value="0.070"/>
		<formula name="epsilon" value="0.003"/>
	</BizExpenses>
		
	<Common desc="商品内部の共通公式">	
		<!-- 生命年金現価  共通定義に移動する予定 -->
		<formula name="rou_xgo" paras="x">
			3/4*rhoxG[x]
		</formula>
		
		<formula name="q_xgo" paras="x">
			1/4*(3*qxG[x]+qx[x])
		</formula>
		
				<!-- 保険期間  -->
		<formula name="n_1" desc="保険期間(編集後)">
			if(n==99){
				omega-x+1
		    }else{n}
		</formula>
		<!-- 払込期間  -->
		<formula name="m_1" desc="払込期間(編集後)">
			if(m==99){
				omega-x+1
		    }else{m}
		</formula>
		
			<!--265専用生命年金現価　ここから -->
			<formula name="a_G_x_m" paras="x,m" fraction="5">
				(N[x]-N[x+m])/D[x]
			</formula>
			<formula name="S_a_G" paras="x,m" fraction="5">
				1+v*(1-q_xgo(x))*{(N[x+1]-N[x+m])/D[x+1]}
			</formula> 
			<formula name="a_TG_x_m" paras="x,m" fraction="5">
				if(kaiyakuUmu==0){
					(NTG[x]-NTG[x+m])/DTG[x]
				}else{
					(N[x]-N[x+m])/D[x]
				}
			</formula>
			<formula name="S_a_TG" paras="x,m" fraction="5">
				if(kaiyakuUmu==0){
					1+v*(1-q_xgo(x))*(1-qw)*
					{(NTG[x+1]-NTG[x+m])/DTG[x+1]}
				}else{
					1+v*(1-q_xgo(x))*(N[x+1]-N[x+m])/D[x+1]
				}
			</formula>
			<formula name="Sm_a_nashu_G" paras="m,x,n" fraction="5">
				if(kaiyakuUmu==0){
					if(n==m){
						0
					}else{
						v*(1-q_xgo(x))*(1-qw)*{DTG[x+m]/DTG[x+1]}*{(N[x+m]-N[x+n])/D[x+m]}
					}
				}else{
					if(n==m){
						0
					}else{
						v*(1-q_xgo(x))*(N[x+m]-N[x+n])/D[x+1]
					}
				}
			</formula>
			<formula name="mja_nashu_G" paras="m,j,x,n" fraction="5">
				if(kaiyakuUmu==0){
					if(n==m){
						0
					}elseIf(n&gt;m &amp;&amp; j&lt;m){
						DTG[x+m]/DTG[x+j]*{(N[x+m]-N[x+n])/D[x+m]}
					}elseIf(n&gt;m &amp;&amp; j==m){
						(N[x+m]-N[x+n])/D[x+j]
					}else{0}
				}else{
					if(n==m){
						0
					}else{
						(N[x+m]-N[x+n])/D[x+j]
					}
				}
			</formula>
			<formula name="a_TG12" paras="x,m" fraction="5">
				if(kaiyakuUmu==0){
					((NTG[x]-NTG[x+m])/DTG[x])-(11/24)*(1-DTG[x+m]/DTG[x])
				}else{
					(N[x]-N[x+m])/D[x]-11/24*(1-D[x+m]/D[x])
				}
			</formula>
			<formula name="S_a_TG12" paras="x,m" fraction="5">
				if(kaiyakuUmu==0){
					13/24+v*(1-q_xgo(x))*(1-qw)*((NTG[x+1]-NTG[x+m]+11/24*DTG[x+m])/DTG[x+1])
				}else{
					13/24+v*(1-q_xgo(x))*((N[x+1]-N[x+m]+(11/24)*D[x+m])/D[x+1])
				}
			</formula>
			
			<!--統計側依赖「統計側からの対応作業依頼.xls-」-->
			<formula name="S_a_k_TG" paras="k,x,m" fraction="5">
				if(kaiyakuUmu==0){
					(k+1)/(2*k)+v*(1-q_xgo(x))*(1-qw)*((NTG[x+1]-NTG[x+m]+(k-1)/(2*k)*DTG[x+m])/DTG[x+1])
				}else{
					(k+1)/(2*k)+v*(1-q_xgo(x))*((N[x+1]-N[x+m]+(k-1)/(2*k)*D[x+m])/D[x+1])
				}
			</formula>
					
			<!-- 給付現価　ここから -->
			<formula name="A_G_xj_nj" paras="x,j,n" fraction="6">
				(MS[x+j]-MS[x+n])/D[x+j]
			</formula>
			<formula name="SA_G" paras="x,n" fraction="6">
				v^(1/2)*rou_xgo(x)+v*(1-q_xgo(x))*{(MS[x+1]-MS[x+n])/D[x+1]}
			</formula>
			<formula name="SA_nashu_G" paras="x,n" fraction="6">
				if(kaiyakuUmu==0){
					v^(1/2)*rou_xgo(x)+v*(1-q_xgo(x))*(1-qw)
					*{(MT[x+1]-MT[x+m_1])/DTG[x+1]
					+DTG[x+m_1]/DTG[x+1]
					*{(MS[x+m_1]-MS[x+n])/D[x+m_1]}}
				}else{
					v^(1/2)*rou_xgo(x)+v*(1-q_xgo(x))*{(MS[x+1]-MS[x+n])/D[x+1]}
				}

			</formula>
			
			<formula name="A_nashu_G" paras="x,j,n" fraction="6">
				if(kaiyakuUmu==0){
					if(n==m_1){
						(MT[x+j]-MT[x+n])/DTG[x+j]
					}elseIf(n&gt;m_1 &amp;&amp; j&lt;m_1){
						(MT[x+j]-MT[x+m_1])/DTG[x+j]+DTG[x+m_1]/DTG[x+j]*(MS[x+m_1]-MS[x+n])/D[x+m_1]
					}elseIf(n&gt;m_1 &amp;&amp; j==m_1){
						(MS[x+j]-MS[x+n])/D[x+j]
					}else{0}
				}else{
					(MS[x+j]-MS[x+n])/D[x+j]
				}
			</formula>
		<!-- 下記の分割払いの係数定義は商品に問わずため、外部の共通commonフォルダに移す -->
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="5" desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>
		
		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
				<!-- 普通の場合 -->
				if(kaisu==1){
					round(1/SBasePrate,4)
				}else{
					round(1/SBasePrate,2)
				}
		</formula>
	</Common>
	
	<Premium desc="保険料">
		
		<formula name="stdPrate" pvh="P" accessable="false" desc="基準Ｐレート">
			if(kaisu==1){singlePrate}else{MultiPrate}
			<formula name="singlePrate" fraction="5" desc="一時払いPrate">
				1/(1-beta_nashu)*(SA_G(x,n_1)+gamma*S_a_G(x,n_1))
			</formula>
			<formula name="MultiPrate" fraction="5" desc="分割払いPrate">
				(SA_nashu_G(x,n_1)+gamma*S_a_TG12(x,m_1)+gamma*Sm_a_nashu_G(m_1,x,n_1))
					/
				(12*(1-beta-zeta-epsilon)*S_a_TG12(x,m_1))
			</formula>
		</formula>
		
		<formula name="Prate" pvh="P" accessable="true" desc="１.保険料レート">
			PrateByPaymode(stdPrate,0)	
		</formula>
		
		<formula name="Premium" pvh="P" accessable="true" desc="２.保険料/保険金額">
<!--			 高額割引がゼロ 100円の位を切り上げ-->
			if(sptate==0){
<!--				 Ｐレートはゼロより小さい場合、ゼロとする -->
				roundDown(SA*max{PrateByPaymode(stdPrate,0),0},0)
			}else{
				roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,0)),0)/1000,0)*1000
			}
		</formula>
	</Premium>
	
	<ReserveFund desc="責任準備金">
		<formula name="MultiV" fraction="4" paras="t">
			if(t==0){
					0
			}else{
				max(A_nashu_G(x,t,n_1)+gamma*mja_nashu_G(m_1,t,x,n_1)
					-
				(SA_nashu_G(x,n_1)+gamma*Sm_a_nashu_G(m_1,x,n_1))*a_TG_x_m(x+t,m_1-t)/S_a_TG(x,m_1),0)
			}
		</formula>
		<formula name="SingleV" fraction="4" paras="t">
			if(t==0){
				SA_G(x,n_1)+gamma*S_a_G(x,n_1)
			}else{
				A_G_xj_nj(x,t,n_1)+gamma*a_G_x_m(x+t,n_1-t)
			}
		</formula>
		
		<formula name="Vrate_accu" paras="t" desc="保険年度末rate">
			if(state==1||state==6){
				MultiV(t)
			}else{
				SingleV(t)
			}
		</formula>
		<formula name="Vrate" pvh="if(gen==2){V}else{H}" fraction="4" paras="t" desc="１.保険年度末Ｖレート">
			Vrate_accu(t)
		</formula>
		<formula name="ContractorYearV" pvh="P" paras="t" fraction="4" desc="保険年度契約者VTレート">
			Vrate_accu(t)
		</formula>
		<formula name="ContractorVrate" pvh="P" fraction="4" accessable="true" desc="３.契約者用Ｖレート">
			if(state==1||state==6){
				(1-f_12(f1))*ContractorYearV(t1)+f_12(f1)*ContractorYearV(t1+1)
			}elseIf(state==2||kaisu==1){
				(1-f_12(f))*ContractorYearV(t)+f_12(f)*ContractorYearV(t+1)
			}else{0}
		</formula>
		
		<formula name="BizYearV" paras="t" fraction="4" accessable="false" desc="事業末Vレート">
			if(state==1){			
			<!--保険料払込期間中-->			
				if(t==0){
					0
				}else{
					max(A_nashu_G(x,t,n_1)+gamma*mja_nashu_G(m_1,t,x,n_1)-((SA_nashu_G(x,n_1)+gamma*Sm_a_nashu_G(m_1,x,n_1))/S_a_TG(x,m_1))*a_TG_x_m(x+t,m_1-t),0)
				}
			}elseIf(state==2||state==6||kaisu==1){			
			<!-- 保険料払込期間終了後（一時払を含む) -->			
				if(t==0){
					SA_G(x,n_1)+gamma*S_a_G(x,n_1)
				}else{
					A_G_xj_nj(x,t,n_1)+gamma*a_G_x_m(x+t,n_1-t)
				}
			}else{0}
		</formula>

		<formula name="BizYearVate" pvh="if(kisoritsu==0){P}elseIf(kisoritsu==1){V}else{H}" accessable="true" desc="２．事業年度末Vレート">
			BizYearV(t)
		</formula>
	</ReserveFund>

	<SurrenderFee desc="解約返戻金">
		<formula name="tSigma" paras="t" desc="tsigma">
				0.003*min(n_1/10,1)*max(1-t/min(m_1,10),0)
		</formula>
		<formula name="Vrate_V" pvh="V" paras="t">
			MultiV(t)
		</formula>
		<formula name="Wrate" fraction="4" pvh="P" accessable="true" desc="１.解約返戻金Ｗレート">
			if(PremiumAbolishSign==1){
				if(kaiyakuUmu==1){
				<!-- 解約返戻金あり -->
					if(state==1||state==6){
					<!-- 保険料払込期間中（保険料払込免除を含む）	 -->
						if(12*t1+f1&lt;12*t+f){
							(1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
						}else{
							(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
						}
					}elseIf(state==2||kaisu==1){
					<!-- 保険料払込期間終了後.一時払-->
						(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
					}else{0}
				}else{0}
			}elseIf(contractDate&gt;=20080202){
				if(kaiyakuUmu==1){
					if(state==1||state==6){
						v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),4)
					}elseIf(state==2||kaisu==1){
						(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
					}else{0}
				}else{0}
			}else{
				if(kaiyakuUmu==1){
					if(state==1||state==6){
						v^ve*round((1-f_12(f1))*min(tWrate(t1),Vrate_V(t1))
							+
						f_12(f1)*min(tWrate(t1+1),Vrate_V(t1+1)),4)
					}elseIf(state==2||kaisu==1){
						(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
					}else{0}
				}else{0}
			}
			
			<formula name="tWrate" paras="t" pvh="P" desc="解約返戻金Wレート">
				if(state==1||state==6){
					<!-- 払込期間中或は払込免除 -->
					if(t/min(m_1,10)&gt;=1){
						round(max(ContractorYearV(t),0),4)
					}else{
						round(max(ContractorYearV(t)-0.003*min(n_1/10,1)*(min(m_1,10)-t)/min(m_1,10),0),4)
					}
				}elseIf(state==2||kaisu==1){
					<!-- 払込期間終了後 -->
					max(ContractorYearV(t),0)
				}else{0}
			</formula>
		</formula>
	</SurrenderFee>
</Formula-definition>