<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
	<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<!-- 予定事業費率 -->
		<formula name="alpha" desc="新契約費(alpha)" value="0.02"/>
		<formula name="delta" desc="新契約費(delta)">
			if(kaisu==1){
				0
			}elseIf(m==99){
			    0.02
			}else{
				roundDown(0.02*min(max(m1,10)/20,1),8)
			}
	    </formula>
		<formula name="gamma" desc="維持費（払込中)(gamma)">
			if(gen==1){
				0.00215
			}else{
				0.00205
			}
		</formula>
		<formula name="gamma_nashu" value="0.002" desc="維持費（払込中了)(gamma_nashu)" />
		<formula name="gamma1" value="0.001" desc="延長定期・死亡(gamma1)" />
		<formula name="gamma2" value="0.001" desc="延長定期・生存(gamma2)" />
		<formula name="beta" value="0.03" desc="集金費beta" />
		<formula name="zeta" desc="集金費zeta">
			if(gen==1){
				0.04
			}elseIf(gen==2){
				0.03
			}else{
				0.025
			}
		</formula>
		<formula name="epsilon" desc="保険料払込免除(epsilon)">
			if(m1&lt;=5){
				0.0005
			}elseIf(m1&gt;5&amp;&amp;m1&lt;=10){
				0.001
			}else{
				0.002
			}
		</formula>
	</BizExpenses>
  
	<Common desc="商品内部の共通公式">
		<formula name="R_t" paras="t" desc="ステップ払込方式の第ｔ保険年度の保険料(R_t)">
			if(t&lt;=9){
				1.0
			}elseIf(t&gt;=15){
				1.3
			}else{
				if(step==10){
					1.3
				}else{
					1.0
				}
			}
	    </formula>
		<formula name="f_a12_x" paras="f,x" fraction="5">
			N[x+f]/D[x]-11/24*(D[x+f]/D[x])
		</formula>
		<formula name="f_a12_x_n" paras="f,n,x" fraction="5">
			(N[x+f]-N[x+n])/D[x]-11/24*((D[x+f]-D[x+n])/D[x])
		</formula>

		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			<!-- 普通の場合 -->
			if(kaisu==1){
			    round(1/SBasePrate,4)
			}else{
			   round(1/SBasePrate,2)
			}
		</formula>

		<!-- 1.5.c.期始払生命現価(ステップ払込方式における 歳加入、 年経過時または契約時) -->
		<formula name="M_a_x_t_m_t" paras="x,m,t"  desc="期始払生命現価1">
	        if(m&lt;=step){
	        	round((N[x+t]-N[x+m])/D[x+t],5)
	        }elseIf(m&gt;step){
				if(t&lt;step){
					round((N[x+t]-N[x+step])/D[x+t],5)+
					round(round((N[x+step]-N[x+m])/D[x+t],5)*1.3,5)
				}else{
					round(round((N[x+t]-N[x+m])/D[x+t],5)*1.3,5)
				}
			}else{0}
		</formula>
		<formula name="M_a_x_m" paras="x,m" desc="期始払生命現価2">
			if(m&lt;=step){
				round((N[x]-N[x+m])/D[x],5)
			}elseIf(m&gt;step){
				round((N[x]-N[x+step])/D[x],5)
					+
				round(round((N[x+step]-N[x+m])/D[x],5)*1.3,5)
			}else{0}
		</formula>
		<formula name="M_a_12_x_m" paras="x,m"  desc="期始払生命現価3">
			if(m&lt;=step){
				round((N[x]-N[x+m])/D[x]*13/24+(N[x+1]-N[x+m+1])/D[x]*11/24,5)          
			}elseIf(m&gt;step){
				round((N[x]-N[x+step])/D[x]*13/24+(N[x+1]-N[x+step+1])/D[x]*11/24,5)+
				round((round((N[x+step]-N[x+m])/D[x]*13/24+(N[x+step+1]-N[x+m+1])/D[x]*11/24,5)*1.3),5)
			}else{0}
		</formula>
		
		<formula name="M_a_x" paras="x"  desc="期始払生命現価4">
			if((omega-x+1)&lt;=step){
				round(N[x]/D[x],5)          
			}else{
				round((N[x]-N[x+step])/D[x],5)
					+
				round(round(N[x+step]/D[x],5)*1.3,5)
			}
		</formula>

		<formula name="m1" desc="保険料払込期間(m1)" >
			if(m==99){
				omega-x+1
			}else{
				m
			}
		</formula>
		
		<formula name="d" desc="高額割引率">
			if(xtime&gt;0){
				0
			}else{
				if(gen==3||gen==4){
					if(SA&lt;10000000){
						0
					}elseIf(SA&gt;=30000000){
						0.00003
					}else{
						0.00002
					}
				}else{
					if(SA&lt;10000000){
						0
					}else{
						0.00002
					}
				}
			}
		</formula>
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="6" desc="保険料レート">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>
	</Common>
	<Premium desc="保険料">
		<formula name="stdPrate" pvh="P" desc="基準Ｐレート">	
			if(kaisu==1){
				round(A_x(x)+alpha+gamma_nashu*a_x(x),5)
			}else{
			<!-- 平準払 -->
				if(step==0){
					<!-- 終身払 -->
					if(m==99){
			        	round((A_x(x)+alpha+gamma*a_k_x(12,x))/(12*(1-beta-zeta-delta-epsilon)*a_k_x(12,x)),6)			        
			        }else{
					<!-- 有期払 -->
						round(
						((A_x(x)+alpha+gamma*a_k_x_n(12,x,m1)+gamma_nashu*f_a_x(m1,x))
							/
						(12*(1-beta-zeta-delta-epsilon)*a_k_x_n(12,x,m1))),6)
					}
				}else{
					<!-- ステップ払 -->
					<!-- ステップ期間中 -->
					if(stepTime==1){
						<!-- ステップ期間経過後-->
						round(mPaiStep,6)
					}elseIf(stepTime==2){
						round(round(mPaiStep,6)*R_t(m1),6)
					}else{0}
			    }
			}
			<formula name="mPaiStep" desc="mπStepX">
				if(m==99){
					(A_x(x)+alpha+gamma*a_k_x(12,x))
						/
					(12*(1-beta-zeta-delta-epsilon)*round(a_k_x_n(12,x,step)+R_t(m1)*f_a12_x(step,x),5))
				}else{
					(A_x(x)+alpha+gamma*a_k_x_n(12,x,m1)+gamma_nashu*f_a_x(m1,x))
						/
					(12*(1-beta-zeta-delta-epsilon)*round(a_k_x_n(12,x,step)+R_t(m1)*f_a12_x_n(step,m1,x),5))
				}
			</formula>
		</formula>
		
		<formula name="Prate" accessable="true" pvh="P" desc="１．保険料レート">
			PrateByPaymode(stdPrate,d)
		</formula>
		<formula name="SA_d" paras="d,SA_PrateUnit">
			roundUp(roundDown(SA_PrateUnit*S2P(PrateByPaymode(stdPrate,d)),0)/1000,0)*1000
		</formula>
		<formula name="SA_Premium" paras="SA_PrateUnit">
			if(gen==3||gen==4){
				if(SA_d(0.00003,SA_PrateUnit)&gt;=30000000){
					SA_d(0.00003,SA_PrateUnit)
				}elseIf(SA_d(0.00002,SA_PrateUnit)&gt;=10000000 &amp;&amp; SA_d(0.00002,SA_PrateUnit)&lt;30000000){
					SA_d(0.00002,SA_PrateUnit)
				}else{
					SA_d(0,SA_PrateUnit)
				}
			}else{
				if(SA_d(0.00002,SA_PrateUnit)&gt;10000000){
					SA_d(0.00002,SA_PrateUnit)
				}else{
					SA_d(0,SA_PrateUnit)
				}
			}
		</formula>
		<formula name="Premium" pvh="P" accessable="true" desc="２．保険料・保険金">
			<!-- 高額割引がゼロ 100円の位を切り上げ--> 
			if(sptate==0){
            <!-- Ｐレートはゼロより小さい場合、ゼロとする  -->
			   roundDown(SA*max{PrateByPaymode(stdPrate,d),0},0)
			}else{
			   SA_Premium(SA)
		     }
	   </formula>

	</Premium>
	<ReserveFund desc="保険積立金">
	<formula name="yearPrate" pvh="P" fraction="6" desc="年払いPrate（P基礎）">
		PayFactor(2,gen,1)*stdPrate-12*d
	</formula>
	
	<!--a.保険年度末保険料積立金rate -->
	    <formula name="live" paras="t,tEX" fraction="4" desc="契約日からの保険期間nEXに端月数がない場合生存部分">
			A_xt_nt_l(x,tEX,t)+gamma2*a_x_n(x+t,tEX-t)
		</formula>
		<formula name="dead_sub1" paras="t,tEX" fraction="4" desc="契約日からの保険期間nEXに端月数がない場合死亡部分">
	     	A_xt_nt_D(x,t,tEX)+gamma1*a_x_n(x+t,tEX-t) 
		</formula>
		<formula name="dead" paras="t,tEX,fEX" fraction="4" desc="契約日からの保険期間nEXに端月数がある場合死亡部分">
			if(t&lt;tEX){
				(1-fEX/12)*dead_sub1(t,tEX)+fEX/12*dead_sub1(t,tEX+1)
			}elseIf(t==tEX){
				fEX/12*dead_sub1(t,tEX+1)
			}else{0}
		</formula>

		<!-- 保険年度末保険料積立金レート(期間中) -->
		<formula name="Vrate_endofYear_kkc" paras="t,z" desc="保険年度積立金レート(期間中)">
			if(step==0){
				<!-- 終身払 -->
				if(m==99){
					max(A_x(x+t)-A_x(x)/a_x(x)*a_x(x+t)
						-
					if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
				<!-- 有期払 -->
				}else{
					max(A_x(x+t)+gamma_nashu*a_x(x+t)-(A_x(x)+gamma_nashu*a_x(x))/a_x_n(x,m1)*a_x_n(x+t,m1-t)
						-
					if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
				}		   
			}else{
				<!-- 終身払 -->
				if(m==99){
					max(A_x(x+t)
						-
					M_a_x_t_m_t(x,m1,t)*(A_x(x)+alpha+gamma*a_x_n(x,m1))/M_a_x_m(x,m1)
						+
			        a_x_n(x+t,m1-t)*(alpha+gamma*a_x_n(x,m1))/a_x_n(x,m1)
						-
			        if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
			     }else{
			     <!-- 有期払 -->
					max(A_x(x+t)+gamma_nashu*f_a_x(m1-t,x+t)
						-
					M_a_x_t_m_t(x,m1,t)
						*
					(A_x(x)+gamma_nashu*f_a_x(m1,x)+alpha+gamma*a_x_n(x,m1))/M_a_x_m(x,m1)
						+
					a_x_n(x+t,m1-t)*(alpha+gamma*a_x_n(x,m1))/a_x_n(x,m1)
						-
					if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
				}
			}
		</formula>
		<!-- 保険年度末保険料積立金レート(期間終了) -->
		<formula name="Vrate_endofYear_kksl" paras="t" desc="保険年度末保険料積立金レート(期間終了)">
			A_x(x+t)+gamma_nashu*a_x(x+t)
		</formula>
		
		<!-- 保険年度末保険料積立金レート(sub) ここから-->		
		<formula name="Vrate_accu" paras="t,z" desc="保険年度末保険料積立金レート(sub)">
			<!-- 保険料払込期間中 -->
			if(state==1||state==6){
				Vrate_endofYear_kkc(t,z)
			<!-- 保険料払込期間終了 -->
			}elseIf(state==2||state==4||kaisu==1){
				Vrate_endofYear_kksl(t)
			<!-- 延長定期保険 -->	
			}elseIf{state==7}{
				if(SAS!=0){
					live(t,tEX)
				}else{
					dead(t,tEX,fEX)
				}
			}else{0}
		</formula>
		
		<formula name="Vrate" pvh="H" fraction="4" accessable="true" desc="１．保険年度末Vレート">
			Vrate_accu(t,0)
		</formula>

		<formula name="ContractorYearV" paras="t,z" fraction="4" pvh="P" desc="契約者用Vレート">
			Vrate_accu(t,z)
		</formula>
		
		<formula name="ContractorVrate" fraction="4" pvh="P" accessable="true" desc="３．契約者用Vレート">
			if(state==2||state==4||kaisu==1||state==7){
				(1-f_12(f))*ContractorYearV(t,z)+(f_12(f))*ContractorYearV(t+1,z)
			}else{
				(1-f_12(f1))*ContractorYearV(t1,z)+(f_12(f1))*ContractorYearV(t1+1,z)
			}
		</formula>
		
	    <!-- 事業年度末用保険年度末Vレート  ここから-->
		<formula name="BizYearV" paras="t,z" accessable="false" desc="事業末Vレート">
			<!-- 保険料払込期間中 -->
			if(state==1){
			<!-- 平準払 -->
				if(step==0){
					<!-- 終身払 -->
					if(m==99) {
						if(round(A_x(x)/a_x(x),6)&lt;yearPrate){
							Vrate_endofYear_kkc(t,z)
						}else{
							max((A_x(x+t)-yearPrate*a_x(x+t)
								-
							if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)}),0)
						}
					<!-- 有期払 -->	
					}else {
						if(round((A_x(x)+gamma_nashu*f_a_x(m,x))/a_x_n(x,m),6)&lt;yearPrate){
							Vrate_endofYear_kkc(t,z)	
						}else{
							max(
							A_x(x+t)+gamma_nashu*a_x(x+t)-(yearPrate+gamma_nashu)*a_x_n(x+t,m-t)
								-
							if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
						}
					}
					<!--ステップ払  -->
				}else{
				<!-- 終身払 -->
					if(m==99){
						if(round(A_x(x)/M_a_x_m(x,m1),6)&lt;yearPrate){
							Vrate_endofYear_kkc(t,z)	
						}else{
							max(A_x(x+t)-M_a_x_t_m_t(x,m1,t)
								*
							(yearPrate+(alpha+gamma*a_x_n(x,m1))/M_a_x_m(x,m1))
								+
							a_x_n(x+t,m1-t)*(alpha+gamma*a_x_n(x,m1))/a_x_n(x,m1)
								-
							if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0)
						}     
					<!-- 有期払 -->
					}else{
						set{e1=(A_x(x)+gamma_nashu*f_a_x(m,x))/M_a_x_m(x,m1)}
							if(round(e1,6)&lt;yearPrate){
								Vrate_endofYear_kkc(t,z)	
							}else{
								max(A_x(x+t)+gamma_nashu*a_x(x+t)-M_a_x_t_m_t(x,m1,t)*(yearPrate+(alpha+gamma*a_x_n(x,m1))/M_a_x_m(x,m1))
								+a_x_n(x+t,m1-t)*(alpha+gamma*a_x_n(x,m1))/a_x_n(x,m1)
									-
								if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)},0) 
							}
					}
				}
			<!-- 保険料払込期間中,保険料払込免除 (一時払,払済保険を含む)-->
			}elseIf(state==2||state==6||kaisu==1||state==4){
				Vrate_endofYear_kksl(t)
			 <!-- 延長定期保険 -->	
			}elseIf{state==7}{
			    if(SAS!=0){
			    	live(t,tEX)
			    }else{
			    	dead(t,tEX,fEX)
			    }
			}else{0}
		</formula>
		
		<formula name="calBizYearV" fraction="4" desc="事業末用Vレート">
			BizYearV(t,z)
		</formula>
		
	</ReserveFund>

	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate" paras="t" pvh="P" fraction="4" desc="tWrate">
			<formula name="tsigma" paras="t">
				0.015*max{1-t/min(m1,10),0}
			</formula>
			if(state==1||state==6){
				<!-- 払込期間中　または　免除 -->
				max{ContractorYearV(t,0)-tsigma(t),0}
			}else{
				ContractorYearV(t,0)
			}
		</formula>
		<formula name="Wrate" fraction="4" pvh="P" accessable="true" desc="１．解約返戻金Wレート">
			<formula name="Wrate_Sub1" paras="t1" desc="Wrate_Sub4">
				min(tWrate(t1),Vrate_VBase(t1))
				<formula name="Vrate_VBase" pvh="V" paras="t1" fraction="4" desc="保末Vrate（V基礎）">
					Vrate_endofYear_kkc(t1,min(m1,5))
				</formula>
			</formula>
			if(state==2||kaisu==1||state==4){
				<!-- 一時払い、払込期間完了後　または　払込済み -->
			    (1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
			}elseIf(state==1||state==6){
				<!-- 払込期間中　または　免除 -->
				if(PremiumAbolishSign==1){
					if((12*t1+f1-12*t-f)&lt;0){
						<!-- 払込年月数-経過年月数<0の場合、t,fをt1,f1に読み替え -->
						(1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
					}else{
						(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
					}
				}elseIf(contractDate&gt;=20080202){
					v^ve*round(((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)),4)
				}else{
					v^ve*round(((1-f_12(f1))*Wrate_Sub1(t1)+f_12(f1)*Wrate_Sub1(t1+1)),4)
				}
			}elseIf(state==7){
				<!-- 延長保険 -->
			    if(SAS!=0){
			    	(1-f_12(f))*live(t,tEX)+f_12(f)*live(t+1,tEX)
			  	}else{
			  		(1-f_12(f))*dead(t,tEX,fEX)+f_12(f)*dead(t+1,tEX,fEX)
			  	}
			}else{0}
		</formula>
	</SurrenderFee>
</Formula-definition>