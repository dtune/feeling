<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
	<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<!-- 予定事業費率 -->
		<formula name="alpha" paras="n" desc="新契約費(alpha)">
			roundDown(0.006*min(n/10,1),8)
		</formula>
		<formula name="delta" paras="n" fraction="3" desc="新契約費(delta)">
			if(kaisu==1){
				max{0.04-0.01/5*max(x+n-55,0),0}
			}else{
				max{0.06-0.01/5*max(x+n-55,0),0}
			}
	    </formula>
		<formula name="gamma" desc="維持費（払込中)(gamma)">
			if(gen==1){0.00115}
			elseIf(gen==5)(0.00126)
			else{0.00105}
		</formula>
		<formula name="gamma1" value="0.001" desc="維持費（払込終了、一時払を含む)(gamma1)" />
		<formula name="beta" value="0.03" desc="集金費beta" />
		<formula name="zeta" desc="集金費zeta">
			if(gen==1){0.04}
			elseIf(gen==2){0.03}
			else{0.025}
		</formula>
		<formula name="epsilon" paras="m" desc="保険料払込免除(epsilon)">
		       if(m&lt;=5){0.0005}
		       elseIf(m&gt;5 &amp;&amp; m&lt;=10){0.0010}
		       else{0.0020}
		</formula>
	</BizExpenses>
	
	<Common desc="商品内部の共通公式">
		<!-- これからは共通公式 -->
		<formula name="qDD" paras="x,ptn" desc="予定死亡率">
			if(gen==5){
				if(contractUpdType==1 || ptn==1){
					qxDD1[x]
				}else{
					1/4*(3*qxDD1[x]+qxDD2[x])
				}
			}else{
				1/4*(3*qxDD1[x]+qxDD2[x])
			}
		</formula>
				
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="6" desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>

		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			<!-- 普通の場合 -->
			if(kaisu==1){
			    round(1/SBasePrate,4)
			}else{
			   round(1/SBasePrate,2)
			}
		</formula>

		<!-- 309専用生命年金現価　ここから -->
		
		<formula name="aDD_x_m" paras="x,m" fraction="5">
			if(m&lt;=0){
				0
			}else{
				(N[x]-N[x+m])/D[x]
			}
		</formula>
		
		<formula name="Sa_DD" paras="x,m,ptn" fraction="5">
			1+v*(1-qDD(x,ptn))*aDD_x_m(x+1,m-1)
		</formula>
				
		<formula name="Sa12" paras="x,m,ptn" fraction="5">
			13/24+v*(1-qDD(x,ptn))*(11/24+A12(x+1,m-1))
			<formula name="A12" paras="x,m" fraction="5">
				(N[x]-N[x+m])/D[x]-(11/24)*(1-D[x+m]/D[x])
			</formula>
		</formula>
		
		<formula name="ma_DD" paras="m,x,n" fraction="5">
			(N[x+m]-N[x+n])/D[x]
		</formula>
		
		<formula name="S_m_aDD_x_nm" paras="m,x,n,ptn" fraction="5">
			v*(1-qDD(x,ptn))*ma_DD(m-1,x+1,n-1)
		</formula>
		
		
		<!-- 給付現価　ここから -->
		<formula name="S_A1_DD" paras="x,n,ptn" fraction="6" >
			v^(1/2)*qDD(x,ptn)+v*(1-qDD(x,ptn))*A1_DD(x+1,n-1)
			<formula name="A1_DD" paras="x,n" fraction="6">
				1/D[x]*sum(0,n-1){C[x+index]}
			</formula>
		</formula>	
	</Common>
	<Premium desc="保険料">
		<formula name="stdPrate" pvh="P" desc="基準Ｐレート">
			if(kaisu==1){singlePrate}else{MultiPrate(1)}
			<formula name="singlePrate" fraction="5" desc="一時払いPレート">
				{S_A1_DD(x,n,0)+alpha(n)+gamma1*Sa_DD(x,n,0)}/(1-delta(n))
			</formula>
			<formula name="MultiPrate" paras="ptn" fraction="6" desc="分割払いPレート">
				if(m==n){
					if((x+n)&lt;90){
						set(t_Prate=MultiPrateCompare(n,ptn))
						set(i=n)
						while(i&lt;90-x){
							t_Prate=min(t_Prate,MultiPrateCompare(i,ptn))
							set(i=i+1)
						}						
					}else{
						MultiPrateCompare(n,ptn)
					}
				}elseIf(m&lt;n){
					MultiPrate2(ptn)
				}else{0}
				<formula name="MultiPrateCompare" paras="n,ptn">
					{S_A1_DD(x,n,ptn)+alpha(n)+gamma*Sa12(x,n,ptn)}/jyosu(n,n,ptn)
				</formula>
				<formula name="MultiPrate2" paras="ptn">
					{S_A1_DD(x,n,ptn)+alpha(n)+gamma*Sa12(x,m,ptn)+gamma1*S_m_aDD_x_nm(m,x,n,ptn)}/jyosu(n,m,ptn)
				</formula>
				<formula name="jyosu" paras="n,m,ptn">
					12*(1-beta-zeta-delta(n)-epsilon(m))*Sa12(x,m,ptn)
				</formula>
			</formula>
		</formula>
		<formula name="Prate" pvh="P" accessable="true" desc="１．保険料レート">
			PrateByPaymode(stdPrate,0)
		</formula>	
		<formula name="adjustStdPrate" desc="調整基準Ｐレート">
			if(gen==5){
				if(kaisu==1){0}
				else{PrateByPaymode(MultiPrate(1),0)-PrateByPaymode(MultiPrate(0),0)}
			}else{0}
		</formula>
		
		<formula name="adjustPrate" pvh="P" desc="調整P実額">
			if(contractUpdType==1){
				<!-- 更新契約 -->
				0
			}else{
				<!-- 新契約 -->
				round(SA*adjustStdPrate,0)
			}
		</formula>
		
		<!-- OL用計算公式 -->
		<formula name="Premium" pvh="P" paras="stdPrate" accessable="true"
			desc="２．保険料・保険金">
			if(sptate==0){
				roundDown(SA*max{PrateByPaymode(stdPrate,0),0},0)
			}else{
				roundUp(
					roundDown(
						SA*S2P(PrateByPaymode(stdPrate,0))
					,0)/1000
				,0)*1000
			}
		</formula>
	</Premium>

	<ReserveFund desc="責任準備金">
		<!--a.保険年度末保険料積立金 -->
		<formula name="Vrate_accu" paras="t,z">
			<formula name="alpha_z">
				0.008*min(n/10,1)
			</formula>
			max(
			if(state==1||state==6){
			<!--保険料払込期間中・保険料払込免除後  -->
			if(gen==5){
					if(t==0){
						0
					}else{
						A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)-(S_A1_DD(x,n,0)+gamma1*Sa_DD(x,n,0))/Sa_DD(x,m,0)*aDD_x_m(x+t,m-t)
							-
						if(z==0){0}else{alpha_z/Sa_DD(x,z,0)*aDD_x_m(x+t,z-t)}
					}
				}else{
					if(t==0){
						0
					}else{
						max(A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)-(S_A1_DD(x,n,0)+gamma1*Sa_DD(x,n,0))/Sa_DD(x,m,0)*aDD_x_m(x+t,m-t)
							-
						if(z==0){0}else{alpha_z/Sa_DD(x,z,0)*aDD_x_m(x+t,z-t)}
						,0)
					}
				}
			}elseIf(state=2||kaisu==1){
			<!-- 保険料払込期間終了後・一時払 -->
				if(t==0){
					S_A1_DD(x+t,n-t,0)+gamma1*Sa_DD(x+t,n-t,0)
				}else{
					A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)
				}
			}else{0}
			,0)
		</formula>

		<formula name="Vrate" paras="t" pvh="H" fraction="4" accessable="true" desc="１．保険年度末Vレート">
			Vrate_accu(t,0)
		</formula>

		<formula name="ContractorYearV" paras="t,z" pvh="P" fraction="4" desc="契約者用Vレート">
			Vrate_accu(t,z)
		</formula>

		<formula name="ContractorVrate" fraction="4"  pvh="P" accessable="true" desc="３．契約者用Vレート">
			if(state==1||state==6){
				(1-f_12(f1))*ContractorYearV(t1,z)+f_12(f1)*ContractorYearV(t1+1,z)
			}elseIf(state=2||kaisu==1){
				(1-f_12(f))*ContractorYearV(t,z)+f_12(f)*ContractorYearV(t+1,z)
			}else{
				0
			}
		</formula>
		
		<formula name="yearPrate" pvh="P" fraction="6" desc="年払Ｐrate">
			stdPrate*PayFactor(2,gen,1)
		</formula>
		
		<formula name="BizYearV" paras="t,z" accessable="false" desc="事業末Vレート">
			max(
			if(state==1){
			<!-- 保険料払込期間中 -->
				if(gen==5){
					if(t==0){
						0
					}else{
						if(round((S_A1_DD(x,n,0)+gamma1*S_m_aDD_x_nm(m,x,n,0))/Sa_DD(x,m,0),6)&lt;=yearPrate){
							Vrate_accu(t,z)
						}else{
							A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)-(yearPrate+gamma1)*aDD_x_m(x+t,m-t)
								-
							if(z==0){0}else{(0.008*min(n/10,1))/Sa_DD(x,z,0)*aDD_x_m(x+t,z-t)}
						}
					}
				}else{
					if(t==0){
						0
					}else{
						if((S_A1_DD(x,n,0)+gamma1*S_m_aDD_x_nm(m,x,n,0))/Sa_DD(x,m,0)&lt;=yearPrate){
							Vrate_accu(t,z)
						}else{
							A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)-(yearPrate+gamma1)*aDD_x_m(x+t,m-t)
								-
							if(z==0){0}else{(0.008*min(n/10,1))/Sa_DD(x,z,0)*aDD_x_m(x+t,z-t)}
						}
					}
				}
			}elseIf(state==2||state==6||kaisu==1){
			<!-- 保険料払込期間終了後・保険料払込免除後・一時払 -->
				if(t==0){
					S_A1_DD(x+t,n-t,0)+gamma1*Sa_DD(x+t,n-t,0)
				}else{
					A1_DD(x+t,n-t)+gamma1*aDD_x_m(x+t,n-t)
				}
			}else{0}
			,0)
		</formula>			
		<formula name="calBizYearV" fraction="4" desc="事業末用Vレート">
			BizYearV(t,z)
		</formula>
	</ReserveFund>
		
	<SurrenderFee desc="解約返戻金">
			
		<formula name="tWrate" paras="t" pvh="P" desc="解約返戻金Wレート">
			<formula name="tSigma" paras="t">
				0.006*min(n/10,1)*max{1-(t/min(m,10)),0}
			</formula>
			if(state==2||kaisu==1){
				<!-- 払込期間終了後 -->
				max(ContractorYearV(t,0),0)
			}elseIf(state==1||state==6){
				<!-- 払込期間中或は払込免除 -->
				round(max(ContractorYearV(t,0)-tSigma(t),0),4)
			}else{0}
		</formula>
		<formula name="VrateVbaseZ" paras="t,z" pvh="V" fraction="4" desc="保年末V（V基礎）">
			Vrate_accu(t,z)
		</formula>
		<formula name="Wrate" pvh="P" fraction="4" accessable="true" desc="１．解約返戻金Wレート">
			if(PremiumAbolishSign==1){
				if(state==2||kaisu==1){
					(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
				}elseIf(state==1||state==6){
					if(12*t1+f1&lt;12*t+f){
						(1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
					}else{
						((1-f_12(f)))*tWrate(t)+f_12(f)*tWrate(t+1)
					}
				}else{0}
			}elseIf(contractDate&gt;=20080202){
				if(state==2||kaisu==1){
					(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
				}elseIf(state==1||state==6){
					v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),4)
				}else{0}
			}else{
				if(state==2||kaisu==1){
					(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
				}elseIf(state==1||state==6){
					v^ve*round((1-f_12(f1))*min(tWrate(t1),VrateVbaseZ(t1,min(m,5)))+f_12(f1)*min(tWrate(t1+1),VrateVbaseZ(t1+1,min(m,5))),4)
				}else{0}
			}
		</formula>
	</SurrenderFee>
</Formula-definition>