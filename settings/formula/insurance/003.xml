<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<formula name="alpha">
			roundDown(0.017+0.008*min(n/10,1),8)
		</formula>
		<formula name="delta">
			if(kaisu==1){
				0
			}else{
				roundDown(0.02*min(max(min(m,10),2*m-20)/20,1),8)
			}
 		</formula>
		<formula name="gamma">
			if(gen==1){0.00215}else{0.00205}
		</formula>
		<formula name="gamma_nashu" value="0.002"/>
		<formula name="gamma1" value="0.001"/>
		<formula name="gamma2" value="0.001"/>
		<formula name="beta" value="0.03"/>
		<formula name="zeta">
			if(gen==1){0.04}
			elseIf(gen==2){0.03}
			else(0.025)
		</formula>
		<formula name="epsilon">
			if(m&lt;=5){
				0.0005
			}elseIf(m&gt;5&amp;&amp;m&lt;=10){
				0.001
			}else{
				0.002
			}
		</formula>
	</BizExpenses>
	
	<Common desc="商品内部の共通公式">
		<!-- 高額割引率 -->
		<formula name="d" desc="高額割引率">
			if(xtime&gt;0){
				0
			}else{
				if(gen==3||gen==4){
			    	if(SA&lt;10000000){
			    		0
			    	}elseIf(SA&gt;=10000000&amp;&amp;SA&lt;30000000){
			    		0.00002
			    	}else{
			    		0.00003
			    	}  
				}else{
					if(SA&lt;10000000){
						0
					}else{
						0.00002
					}
				}
			}
		</formula>
		<!-- これからは共通公式 -->
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="6" desc="払込方法別Prate">
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>
		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
				<!-- 普通の場合 -->
				if(kaisu==1){
					round(1/SBasePrate,4)
				}else{
					round(1/SBasePrate,2)
				}
		</formula>
	</Common>
	
	<!-- 保険料　ここから -->
	<Premium desc="保険料">
		<formula name="stdPrate" pvh="P" desc="基準Pレート">
			if(kaisu==1){singlePrate}else{MultiPrate}
			<formula name="singlePrate" fraction="5" desc="一時払いPレート">
				A_x_n(x,n)+alpha+gamma_nashu*a_x_n(x,n)
			</formula>
			<formula name="MultiPrate" fraction="6" desc="分割払いPレート">
				{A_x_n(x,n)+alpha+gamma*a_k_x_n(12,x,m)+gamma_nashu*f_a_x_n(m,x,n)}
					/
				{12*(1-beta-zeta-delta-epsilon)*a_k_x_n(12,x,m)}
					+
				0.000000000001
			</formula>
		</formula>
		<formula name="Prate" pvh="P" accessable="true" desc="１．保険料レート">
			PrateByPaymode(stdPrate,d)	
		</formula>
		<formula name="PrateByYear" pvh="P" fraction="6" desc="年払Prate">
			stdPrate*PayFactor(2,gen,1)-12*d
		</formula>
		<!-- OL用計算公式 -->
		<formula name="SA_d" paras="d,SA_PrateUnit">
			roundUp(roundDown(SA_PrateUnit*S2P(PrateByPaymode(stdPrate,d)),0)/1000,0)*1000
		</formula>
		<formula name="SA_Premium" paras="SA_PrateUnit">
			if(gen==3||gen==4){
				if(SA_d(0.00003,SA_PrateUnit)&gt;=30000000){
					SA_d(0.00003,SA_PrateUnit)
				}elseIf(SA_d(0.00002,SA_PrateUnit)&gt;=10000000 &amp;&amp; SA_d(0.00002,SA_PrateUnit)&lt;30000000){
					SA_d(0.00002,SA_PrateUnit)
				}else{
					SA_d(0,SA_PrateUnit)
				}
			}else{
				if(SA_d(0.00002,SA_PrateUnit)&gt;10000000){
					SA_d(0.00002,SA_PrateUnit)
				}else{
					SA_d(0,SA_PrateUnit)
				}
			}
		</formula>
		<formula name="Premium" pvh="P" paras="stdPrate" accessable="true" desc="２．保険料・保険金">
			if(sptate==0){
				roundDown(SA*max{PrateByPaymode(stdPrate,d),0},0)
			}else{
				SA_Premium(SA)
			}
		</formula>
	</Premium>
	
	<!-- 責任準備金　ここから -->
	<ReserveFund desc="責任準備金">
	    <formula name="live" paras="t,tEX" fraction="4" desc="契約日からの保険期間nEXに端月数がない場合生存部分">
			A_xt_nt_l(x,tEX,t)+gamma2*a_x_n(x+t,tEX-t)
		</formula>
		<formula name="dead_sub1" paras="t,tEX" fraction="4" desc="契約日からの保険期間nEXに端月数がない場合死亡部分">
	    	A_xt_nt_D(x,t,tEX)+gamma1*a_x_n(x+t,tEX-t)
	    </formula>
		<formula name="dead" paras="t,tEX,fEX" fraction="4" desc="契約日からの保険期間nEXに端月数がある場合死亡部分">
			if(t&lt;tEX){
				(1-fEX/12)*dead_sub1(t,tEX)+fEX/12*dead_sub1(t,tEX+1)
			}elseIf(t==tEX){
				fEX/12*dead_sub1(t,tEX+1)
			}else{0}
		</formula>

		<!-- 保険年度末保険料積立金レート(期間中) -->
		<formula name="Vrate_endofYear_kkc" paras="t,z" desc="保険年度末保険料積立金レート(期間中)">
			max{
				A_x_n(x+t,n-t)+gamma_nashu*a_x_n(x+t,n-t)
					-
				(A_x_n(x,n)+gamma_nashu*a_x_n(x,n))/a_x_n(x,m)*a_x_n(x+t,m-t)
					-
				if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)}
			,0}
		</formula>
		<!-- 保険年度末保険料積立金レート(期間終了) -->
		<formula name="Vrate_endofYear_kksl" paras="t" desc="保険年度末保険料積立金レート(期間終了)">
        	A_x_n(x+t,n-t)+gamma_nashu*a_x_n(x+t,n-t)
		</formula>
		
		<formula name="Vrate_accu" paras="t,z" desc="保険年度末rate">
			if(kaisu==1||state==2||state==4){
				<!-- 一時払 保険料払込期間終了(払済保険を含む) -->
				Vrate_endofYear_kksl(t)
			}elseIf(state==1||state==6){
				<!-- 保険料払込期間中(保険料払込免除を含む)-->
                Vrate_endofYear_kkc(t,z)
			}elseIf{state==7}{
				<!-- 延長定期保険 -->	
				if(SAS!=0){
					live(t,tEX)
				}else{
					dead(t,tEX,fEX)
				}
			}else{0}
		</formula>
		<!-- 保険年度末保険料積立金レート(sub) -->		
		<formula name="Vrate" fraction="4" pvh="H" accessable="true" desc="１．保険年度末Vレート">
			Vrate_accu(t,0)
		</formula>
		<!-- 契約者用Vレート -->
		<formula name="ContractorYearV" paras="t,z" fraction="4" pvh="P" accessable="false" desc="契約者用Vレート">
			Vrate_accu(t,z)
		</formula>
		
		<formula name="ContractorVrate" pvh="P" fraction="4" accessable="true" desc="３．契約者用Vレート">
			if(kaisu==1||state==2||state==4||state==7){
				(1-f_12(f))*ContractorYearV(t,z)+f_12(f)*ContractorYearV(t+1,z)
			}elseIf(state==1||state==6){
				(1-f_12(f1))*ContractorYearV(t1,z)+f_12(f1)*ContractorYearV(t1+1,z)
			}else{
				0
			}
		</formula>
		
		<formula name="BizYearV" paras="t,z" accessable="false" desc="事業年度末Vレート">
			if(kaisu==1){
				<!-- 一時払 -->
				Vrate_endofYear_kksl(t)
			}else{
				if(state==1){
					<!-- 保険料払込期間中 -->
			  		if(round((A_x_n(x,n)+gamma_nashu*f_a_x_n(m,x,n))/a_x_n(x,m),6)&lt;PrateByYear){
			  			Vrate_endofYear_kkc(t,z)
			  		}else{
			 		 	max{
			 		 		A_x_n(x+t,n-t)+gamma_nashu*a_x_n(x+t,n-t)-(PrateByYear+gamma_nashu)
			 		 		*a_x_n(x+t,m-t)-if(z==0){0}else{alpha/a_x_n(x,z)*a_x_n(x+t,z-t)}
			 		 	,0}
			  		}
			    }elseIf(state==2||state==6||state==4){
					<!-- 保険料払込期間終了後（払済保険を含む）,保険料払込免除契約-->
					Vrate_endofYear_kksl(t)
				}elseIf(state==7){
					<!-- 延長定期保険-->
					if(SAS!=0){
			  			live(t,tEX)
			  		}else{
			  			dead(t,tEX,fEX)
			  		}
			  	}else{0}
			}
		</formula>
		
		<formula name="calBizYearV" fraction="4" desc="事業末用Vレート">
			BizYearV(t,z)
		</formula>
		
	</ReserveFund>
	
	<!-- 解約返戻金　ここから -->
	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate" paras="t" pvh="P">
			<formula name="sigma" paras="t">
				(0.013+0.006*min(n/10,1))*max(1-t/min(m,10),0)
			</formula>
			if(kaisu==1||state==2||state==4){
				<!-- 一時払　-->
				max{ContractorYearV(t,0),0}
			}elseIf(state==1||state==6){
		      	<!--払込期間中　または　免除 -->
			  	round(max{ContractorYearV(t,0)-sigma(t),0),4)
			}elseIf(state==7){
				<!-- 延長定期保険 -->
				if(SAS!=0){
					max{live(t,tEX),0}
				}else{
					max{dead(t,tEX,fEX),0}
				}
			}else{0}
		</formula>
		<formula name="Wrate" fraction="4" pvh="P" accessable="true" desc="１．解約返戻金Wレート">
			<formula name="Wrate_Sub1" paras="t,z">
				min{tWrate(t),Wrate_Sub5(t,z)}
				<formula name="Wrate_Sub5" pvh="V" paras="t,z" fraction="4" >
					Vrate_endofYear_kkc(t,z)
				</formula>
			</formula>
			if(kaisu==1||state==2||state==4){
				((1-f_12(f)))*tWrate(t)+f_12(f)*tWrate(t+1)
			}elseIf(state==1||state==6){
			  	if(PremiumAbolishSign==1){
					if((12*t1+f1-12*t-f)&lt;0){
           				((1-f_12(f1)))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
           			}else{
           				((1-f_12(f)))*tWrate(t)+f_12(f)*tWrate(t+1)
           			}
			  	}elseIf(contractDate&gt;=20080202){
			    	v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),4)
			  	}else{
			    	v^ve*round((1-f_12(f1))*Wrate_Sub1(t1,min(m,5))+f_12(f1)*Wrate_Sub1(t1+1,min(m,5)),4)
			  	}
			}elseIf(state==7){
			    if(SAS!=0){
			    	(1-f_12(f))*live(t,tEX)+f_12(f)*live(t+1,tEX)
			  	}else{
			  		(1-f_12(f))*dead(t,tEX,fEX)+f_12(f)*dead(t+1,tEX,fEX)
			  	}
			}else{0}
		</formula>
	</SurrenderFee>	
</Formula-definition>