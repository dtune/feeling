<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<!-- 予定事業費率 -->	
		<formula name="c" value="1" desc="逓増周期c"/>
		<formula name="k" value="5" desc="上限率k"/>
		<formula name="Sj" paras="j" desc="第ｊ保険年度の死亡保険金率Sj">
			if(teizoKbn==0){
				min(1+theta*((j-1)/c),k)
			}else{
				min((1+theta)^((j-1)/c),k)
			}
		</formula>
		<formula name="alpha" desc="新契約費α">
			round{0.006*min(n/10,1)*nj_Sj(1,n)/n,8}
		</formula>
		<formula name="delta" desc="新契約費δ">
			if(kaisu==1){
				round{max(0.04-(0.01/5)*max(x+n-55,0),0),3}
			}else{
				round{max(0.06-(0.01/5)*max(x+n-55,0),0),3}
			}
		</formula>
		<formula name="gamma" desc="維持費（払込中）γ">
			if(gen==1){
				round{0.00115*nj_Sj(1,m)/m,8}
			}else{
				round{0.00105*nj_Sj(1,m)/m,8}
			}
		</formula>
		<formula name="gamma_nashu" desc="維持費（払込終了）γ'">
			if(n==m){
				0
			}else{
				round{0.001*nj_Sj(m+1,n)/(n-m),8}
			}
		</formula>
		<formula name="gamma1" desc="維持費（一時払）γ1">
			round{0.001*nj_Sj(1,n)/n,8}
		</formula>
		<formula name="gamma2" value="0.001" desc="維持費（払済保険）γ2"/>
		<formula name="beta" value="0.03" desc="集金費β"/>
		<formula name="zeta" desc="集金費ζ">
			if(gen==1){0.04}elseIf(gen==2){0.03}else{0.025}
		</formula>
		<formula name="epsilon" desc="保険料払込免除ε">
			if(m&lt;=5){
				0.0005
			}elseIf(m&gt;5 &amp;&amp; m&lt;=10){
				0.001
			}else{
				0.002
			}
		</formula>
		<formula name="theta" desc="逓増率θ">
			if(teizoKbn==0){0.1}else{0.05}
		</formula>
		<formula name="hkin1">
			roundDown{roundDown{(20000000*n/nj_Sj(1,n)),0}/1000000,0}*1000000
		</formula>
		<formula name="hkin2">
			roundDown{roundDown{(30000000*n/nj_Sj(1,n)),0}/1000000,0}*1000000
		</formula>
		<formula name="hkin3">
			roundDown{roundDown{(50000000*n/nj_Sj(1,n)),0}/1000000,0}*1000000
		</formula>
		<formula name="d" desc="高額割引率d">
			if(xtime&gt;0){
				0
			}else{
				if(SA&lt;hkin1){
					0
				}elseIf(SA&gt;=hkin1 &amp;&amp; SA&lt;hkin2){
					if(gen==3 || gen==4){
						round{0.00002*nj_Sj(1,n)/n,6}
					}else{0}
				}elseIf(SA&gt;=hkin2 &amp;&amp; SA&lt;hkin3){
					if(gen==3 || gen==4){
						round{0.00002*nj_Sj(1,n)/n,6}
					}elseIf(gen==2){
						round{0.000015*nj_Sj(1,n)/n,6}
					}else{
						round{0.00001*nj_Sj(1,n)/n,6}
					}
				}else{
					if(gen==3 || gen==4){
						round{0.00004*nj_Sj(1,n)/n,6}
					}elseIf(gen==2){
						round{0.00003*nj_Sj(1,n)/n,6}
					}else{
						round{0.00001*nj_Sj(1,n)/n,6}
					}
				}
			}
		</formula>
	</BizExpenses>
	
	<Common desc="商品内部の共通公式">
		<formula name="nj_Sj" paras="sn,n">
			sum(sn,n){Sj(index)}
		</formula>
		<!-- 共通定義、ここから -->
		<formula name="a_k_x_n" paras="x,n" fraction="5" desc="始期払k回年金現価">
			(N[x]-N[x+n])/D[x]-(11/24)*(1-D[x+n]/D[x])	
		</formula>
		<formula name="C1" paras="x">
			C[x]
		</formula>
		
		<!-- 下記の分割払いの係数定義は商品に問わずため、外部の共通commonフォルダに移す -->
		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			if(kaisu==1){
				round(1/SBasePrate,4)
			}else{
				round(1/SBasePrate,2)
			}
		</formula>		
		<formula name="SjC1">
			sum(1,n){Sj(index)*C1(x+index-1)}
		</formula>
		
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="6" desc="保険料レート">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>

	</Common>
	
	<Premium desc="保険料">
		<formula name="SingleP" fraction="5" desc="一時払Pレート">
			((1/D[x])*SjC1+alpha+gamma1*a_x_n(x,n))/(1-delta)
		</formula>
		<formula name="MultiP" fraction="6" desc="分割払Pレート">
			((1/D[x])*SjC1+alpha+gamma*a_k_x_n(x,m)+gamma_nashu*f_a_x_n(m,x,n))
					/
			(12*(1-beta-zeta-delta-epsilon)*a_k_x_n(x,m))
		</formula>		
		<formula name="stdPrate" pvh="P" desc="基準Ｐレート">
			if(kaisu==1){<!--　ここから、 一時払い開始 -->
				SingleP
			}else{<!--　ここから、 分割払い開始 -->
				MultiP
			}
		</formula>
		<formula name="PrateByYear" fraction="6" desc="年払Prate">
			stdPrate*PayFactor(2,gen,1)-12*d
		</formula>
		
		<formula name="Prate" accessable="true" pvh="P" desc="１．保険料レート">
			PrateByPaymode(stdPrate,d)
		</formula>
		
		<formula name="Premium" pvh="P" accessable="true" desc="２．保険料・保険金">
			if(x+n-1&gt;128){
				0
			}else{
				<!-- 高額割引がゼロ 100円の位を切り上げ-->
				if(sptate==0){
					<!-- Ｐレートはゼロより小さい場合、ゼロとする -->
					roundDown(SA*max{PrateByPaymode(stdPrate,d),0},0)
				}else{
					roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,d)),0)/1000,0)*1000
				}
			}
		</formula>
	</Premium>
	<ReserveFund desc="保険積立金">
		<!-- 保険年度末保険料積立金 -->
		<formula name="SingleV" paras="t" desc="一時払VTレート">
			(1/D[x+t])*sum(t+1,n){Sj(index)*C1(x+index-1)}+gamma1*a_x_n(x+t,n-t)
		</formula>
		<formula name="MultiV" paras="t,z" desc="払込中（免除）VTレート">
			set(alphaz=(0.008*min(n/10,1)*nj_Sj(1,n))/n)
			max{
				{(1/D[x+t])*sum(t+1,n){Sj(index)*C1(x+index-1)}+gamma_nashu*a_x_n(x+t,n-t)}
				-
				((1/D[x])*sum(1,n){Sj(index)*C1(x+index-1)}+gamma_nashu*a_x_n(x,n))*a_x_n(x+t,m-t)/a_x_n(x,m)
				-
				if(z==0){0}else{(alphaz/a_x_n(x,z))*a_x_n(x+t,z-t)}
			,0}
		</formula>
		<formula name="PaidupV" paras="t" desc="払済保険VTレート">
			A_xt_nt_D(x,t,n)+gamma2*a_x_n(x+t,n-t)
		</formula>
		<formula name="PaymentEndV" paras="t" desc="払込期間終了後のVTレート">
			(1/D[x+t])*sum(t+1,n){Sj(index)*C1(x+index-1)}+gamma_nashu*a_x_n(x+t,n-t)		
		</formula>
		
		<formula name="Vrate_accu" paras="t,z" desc="保険年度末rate">
			if(kaisu==1){
				SingleV(t)
			}elseIf(state==4){
				PaidupV(t)
			}elseIf(state==1 || state==6){
				MultiV(t,z)
			}elseIf(state==2){
				PaymentEndV(t)
			}else{0}
		</formula>
		<formula name="Vrate" pvh="H" fraction="4" accessable="true" desc="１．保険年度末Vレート">
			Vrate_accu(t,0)
		</formula>

		<!-- 契約者保険年度Vrate　ここから -->
		<formula name="ContractorYearV" paras="t,z" pvh="P" fraction="4" desc="契約者保険年度Vrate">
			Vrate_accu(t,z)
		</formula>	
			
		<!-- 契約者保険年度Vrate(保険料払込年数または経過年数が整数でない場合)　ここから -->
		<formula name="ContractorVrate" pvh="P" accessable="true" fraction="4" desc="３．契約者用Vレート">
			if(state==4||state==2||kaisu==1){
				<!-- 払済 -->
				(1-f_12(f))*ContractorYearV(t,z)+(f_12(f))*ContractorYearV(t+1,z)
			}elseIf(state==1 || state==6){
				<!-- 払込期間中まだは免除 -->
				(1-f_12(f1))*ContractorYearV(t1,z)+(f_12(f1))*ContractorYearV(t1+1,z)
			}else(0)
		</formula>
		
		<formula name="Vrate_Overbar1">
			{(1/D[x])*sum(1,n){Sj(index)*C1(x+index-1)}+gamma_nashu*ft_a_xt_n(m,0,x,n)}/a_x_n(x,m)
		</formula>
		
		<formula name="BizYearV" paras="t,z" accessable="false" desc="事業末Vレート">
			if(kaisu&gt;1){	
				if(state==4){
					<!-- 払済 -->
					PaidupV(t)
				}elseIf(state==1){
					if(round(Vrate_Overbar1,6)&lt;=PrateByYear){
						MultiV(t,z)
					}else{
						<!-- 払込期間中-->	
						set(alphaz=0.008*min(n/10,1)*nj_Sj(1,n)/n)
						max{
							
							{(1/D[x+t])*sum(t+1,n){Sj(index)*C1(x+index-1)}+gamma_nashu*a_x_n(x+t,n-t)}
							-
							(PrateByYear+gamma_nashu)*a_x_n(x+t,m-t)
							-
							if(z==0){0}else{(alphaz/a_x_n(x,z))*a_x_n(x+t,z-t)}
						,0}
					}
				}elseIf(state==2||state==6){
					<!-- 払込期間終了後 .免除-->
					PaymentEndV(t)
				}else(0)
			}elseIf(kaisu==1){
				<!-- 一時払 -->
				SingleV(t)
			}else{0}
		</formula>
		
		<formula name="calBizYearV" fraction="4" desc="事業末用Vレート">
			BizYearV(t,z)
		</formula>

	</ReserveFund>
	
	<!-- 解約返戻金　ここから -->
	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate" paras="t" pvh="P" fraction="4">
			<formula name="sigma" paras="t">
				0.006*min(n/10,1)*(nj_Sj(1,n)/n)*max{1-t/min(m,10),0}
			</formula>
			max{
				if(state==4||kaisu==1||state==2){
					<!-- 払済 -->
					ContractorYearV(t,0)
				}elseIf(state==1 || state==6){
					<!-- 払込期間中まだは免除 -->
					ContractorYearV(t,0)-sigma(t)
				}else{0}
			,0}
		</formula>
		<formula name="Wrate" fraction="4" pvh="P" accessable="true" desc="１．解約返戻金Wレート">
			<formula name="Wrate_Overbar1">
				if(12*t1+f1-12*t-f&lt;0){
					<!-- 払込年月数-経過年月数<0の場合、t,fをt1,f1に読み替え -->
					(1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
				}else{
					(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
				}				
			</formula>
			<formula name="Wrate_Overbar2">
				v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),4)
			</formula>
			<formula name="MultiV_V" fraction="4" pvh="V" paras="t">
				MultiV(t,min(m,5))
			</formula>
			<formula name="Wrate_Overbar3">
				v^ve*round((1-f_12(f1))*min{tWrate(t1),MultiV_V(t1)}+f_12(f1)*min{tWrate(t1+1),MultiV_V(t1+1)},4)
			</formula>
			<formula name="Wrate_Overbar4">
				(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
			</formula>
			if(state==4||kaisu==1||state==2){
				<!-- 払済 -->
				Wrate_Overbar4
			}elseIf(state==1 || state==6){
				<!-- 払込期間中まだは免除 -->
				if(PremiumAbolishSign==1){
					Wrate_Overbar1
				}elseIf(contractDate&gt;=20080202){
					Wrate_Overbar2
				}else{
					Wrate_Overbar3
				}
			}else(0)
		</formula>
	</SurrenderFee>
</Formula-definition>