<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
    <BizExpenses desc="事業費率の設定">
        <formula name="e" value="0.00010"/>   
        <formula name="zeta">
           if(gen==1){0.04}elseIf(gen==2){0.03}else{0.025}
        </formula>
        <formula name="epsilon" paras="m">
           if(m==n){0.002}elseIf(m&lt;=5){0.0005}elseIf(m&gt;5&amp;&amp;m&lt;=10){0.001}
           else{0.002}
        </formula>
        <!--予定発生率  -->
        <formula name="q0">
           if(sex==0){0.000328}else{0.000200}
        </formula>
        <formula name="q1">
           if(sex==0){0.000036}else{0.000023}
        </formula>
    </BizExpenses>
    <Common desc="商品内部の共通公式">
    	<formula name="vq" paras="x">
    		1-v*(1-qx[x])
    	</formula>
    	<formula name="vqe" paras="x,n">
    		(v*(1-qx[x]))^n
    	</formula>
        <formula name="a_x_n" paras="x,n" fraction="5">
			if(n&lt;=0){0}else{(1-vqe(x,n))/vq(x)}
		</formula>
		<formula name="a_k_x_n" paras="k,x,m" fraction="5" desc="始期払k回年金現価">
			(1-vqe(x,m))/vq(x)-(k-1)/(2*k)*(1-vqe(x,m))
		</formula>
		<formula name="f_a_x_n" paras="m,x,n" fraction="5">
			vqe(x,m)*(1-vqe(x,n-m))/vq(x)
		</formula>
				
		<!-- 042商品の端数処理が6 -->
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="6" desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>
		
		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
				<!-- 普通の場合 -->
				if(kaisu==1){
					round(1/SBasePrate,4)
				}else{
					round(1/SBasePrate,2)
				}
		</formula>
    </Common>
    <Premium desc="保険料">
        <formula name="stdPrate" pvh="P" accessable="false" desc="基準Ｐレート">
			if(kaisu==1){singlePrate}else{MultiPrate}
			<formula name="singlePrate" fraction="5" limitedAge="40" desc="一時払いPrate">
				(v^(1/2)*(q0+q1)+e)*a_x_n(x,n)
			</formula>
			<formula name="MultiPrate" desc="分割払いPrate" limitedAge="40">
			    if(m==n){subMultiPrate(1,1)}else{subMultiPrate(m,n)}
	        	<formula name="subMultiPrate" fraction="6" paras="m,n">
					(v^(1/2)*(q0+q1)*a_x_n(x,n)+e*a_k_x_n(12,x,m)+e*f_a_x_n(m,x,n))
						/
					(12*(1-zeta-epsilon(m))*a_k_x_n(12,x,m)) 
	            </formula>  
			</formula>
		</formula>
		
		<formula name="Prate" pvh="P" accessable="true" desc="１.保険料レート">
			PrateByPaymode(stdPrate,0)	
		</formula>
	    <formula name="Premium" pvh="P" accessable="true" desc="２.保険料/保険金額">
			if(sptate==0){
				<!-- 306商品の割引がゼロ -->
				roundDown(SA*PrateByPaymode(stdPrate,0),0)
			}else{
				roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,0)),0)/1000,0)*1000
			}
		</formula>
    </Premium>
    
    <ReserveFund desc="保険積立金">
        <formula name="BenifitPostponingV" fraction="4" limitedAge="40" paras="t" desc="保険料払込期間中\免除" >
	        max(BenifitPostponingV1(t)-BenifitPostponingV2(t),0)
	       <formula name="BenifitPostponingV1" paras="t">
	       		v^(1/2)*(q0+q1)*a_x_n(40,n-t)+e*a_x_n(40,n-t) 
	       </formula>
	       <formula name="BenifitPostponingV2" paras="t">
	            (v^(1/2)*(q0+q1)*a_x_n(40,n)+e*a_x_n(40,n))/a_x_n(40,m)*a_x_n(40,m-t)
	       </formula>
	    </formula>
        <formula name="BenifitStartedV" paras="t" fraction="4" limitedAge="40" desc="保険料払込期間終了後\一時払">
	    	v^(1/2)*(q0+q1)*a_x_n(40,n-t)+e*a_x_n(40,n-t)
	    </formula>
	    
	    <formula name="Vrate_accu" paras="t" desc="保険年度末rate">
	    	if(state==1||state==6){
             <!-- 払込中-->
             BenifitPostponingV(t)
            }elseIf(state==2||kaisu==1){
             <!--保険料払込期間終了後 一時払 -->
             BenifitStartedV(t)
            }else{0}
	    </formula>
	    <formula name="Vrate" pvh="if(gen&gt;2){H}else{V}" fraction="4" accessable="true" desc="１.保険年度末Ｖレート">
            Vrate_accu(t)
        </formula>
        <formula name="ContractorYearV" paras="t" pvh="P" fraction="4" accessable="false" desc="保険年度契約者VTレート">
            Vrate_accu(t)
        </formula>
        <formula name="ContractorVrate" pvh="P" accessable="true" fraction="4" desc="３.契約者用Ｖレート">
             if(state==1||state==6){
             <!-- 払込中　または　免除 -->
             	(1-f_12(f1))*BenifitPostponingV(t1)+f_12(f1)*BenifitPostponingV(t1+1)
             }elseIf(state==2||kaisu==1){
             <!--保険料払込期間終了後  -->
                 (1-f_12(f))*BenifitStartedV(t)+f_12(f)*BenifitStartedV(t+1)
             }else{0}
        </formula>
        
        <formula name="BizYearV" paras="t" fraction="4" accessable="false" desc="事業末Vレート">
			if(state==1){
				BenifitPostponingV(t)
			}elseIf(state==2||state==6||kaisu==1){
				BenifitStartedV(t)
			}else{
				0
			} 
		</formula>
		
		<formula name="BizYearVate" pvh="if(kisoritsu==0){P}elseIf(kisoritsu==1){V}else{H}" accessable="true" desc="２．事業年度末Vレート">
			BizYearV(t)
		</formula>
        
    </ReserveFund>

    <SurrenderFee desc="解約返戻金">
		<formula name="Wrate" pvh="P" fraction="4" accessable="true" desc="１.解約返戻金Ｗレート">
	    	if(state==2||kaisu==1){
 				((1-f_12(f)))*WT_inpaid_1(t)+f_12(f)*WT_inpaid_1(t+1)    	               
			}elseIf(state==1||state==6){
				if(PremiumAbolishSign==1){
	            	Wrate_Overbar0401
	        	}else{
	            	Wrate_Overbar0301
	          	}  
	        }else{0}
			<formula name="Wrate_Overbar0401">
				if((12*t1+f1-12*t-f)&lt;0){  
					tsigma(t1)*round(
						round(
							((1-f_12(f1)))*WT_inpaid(t1)+f_12(f1)*WT_inpaid(t1+1)
						,4)
					,4)+0.000000000001
				}else{
					tsigma(t)*round(
						round(
							((1-f_12(f)))*WT_inpaid(t)+f_12(f)*WT_inpaid(t+1)
						,4)
					,4)+0.000000000001
				}
			</formula>
			<formula name="Wrate_Overbar0301">
				v^ve*tsigma(t1)*round((1-f_12(f1))*WT_inpaid(t1)
					+
				f_12(f1)*WT_inpaid(t1+1),4)+0.000000000001
			</formula>
			<formula name="WT_inpaid" paras="t" pvh="P" desc="払込中または免除">
				max(BenifitPostponingV(t),0)
			</formula>
			<formula name="WT_inpaid_1" paras="t" pvh="P" desc="保険料払込期間終了後 ">
				max(BenifitStartedV(t),0)
			</formula>
			<formula name="tsigma" paras="t" desc="解約控除率">
				if(t&gt;=3){1}else{(n-m)/n}
			</formula>
		</formula>
	</SurrenderFee>
</Formula-definition>