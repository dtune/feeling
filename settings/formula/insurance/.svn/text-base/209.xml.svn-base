<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<!-- 予定発生率等 -->
		<formula name="sg_rho" value="0.0159" desc="予定災害入院率ρ"/>
		<formula name="sp_rho" value="0.040345" desc="予定疾病入院率ρ"/>
		<formula name="sg_T" value="37.3" desc="予定災害入院給付日T"/>
		<formula name="sp_T" value="15.2" desc="予定疾病入院給付日T"/>
		<formula name="eta" paras="S" desc="予定手術発生率η">
			if(S==40){0.003317}elseIf(S==20){0.008931}else{0.014168}
		</formula>
		<!-- 予定事業費率等 -->
		<formula name="sg_e" value="0.167" desc="災害入院給付金部分e"/>
		<formula name="sp_e" value="0.2" desc="疾病入院給付金部分e"/>
		<formula name="st_e" value="0.04" desc="手術入院給付金部分e"/>
		<formula name="beta" value="0.1" desc="集金費β"/>
		<formula name="zeta" desc="集金費ζ">
			if(gen==1){0.04}elseIf(gen==2){0.03}else{0.025}
		</formula>
		<formula name="epsilon" desc="保険料払込免除ε">
			if(m&lt;=5){0.0005}elseIf(m&gt;5&amp;&amp;m&lt;=10){0.001}else{0.002}
		</formula>
	</BizExpenses>
	
	<Common desc="商品内部の共通公式">
	
		<!-- 保険契約者生存率、年齢40制限 -->
		<formula name="ly" paras="x">
			if(contractorSex==1){
				maleLy[x]
			}else{
				femaleLy[x]
			}
		</formula>
		<formula name="qy" paras="x" desc="契約者死亡率ｑｙ">
			if(contractorSex==1){
				maleQy[x]
			}else{
				femaleQy[x]
			}
		</formula>
		<formula name="st_A_l" desc="給付現価st_A_l">
			<!-- 20110111乗田さんの答え、端数処理を削除 -->
			v^(1/2)*(eta(40)*40+eta(20)*20+eta(10)*10)
		</formula>
		<formula name="f_a_xy_n" paras="x,y,n,m" fraction="5">
			sum(1,m){v^(index-1)*lx[x+index-1]*ly(y+index-1)}/(lx[x]*ly(y))
		</formula>
		<formula name="a_k_xy_n" paras="k,x,y,m" fraction="5">
			sum(1,m){v^(index-1)*lx[x+index-1]*ly(y+index-1)}/(lx[x]*ly(y))
			-
			(k-1)/(2*k)*{lx[x]*ly(y)-(v^m)*lx[x+m]*ly(y+m)}/(lx[x]*ly(y))
		</formula>
		<!-- 年齢40制限ありのf_a_k_xy_n -->
		<formula name="f_a_xy_n_40" paras="x,n,m" fraction="5" desc="年齢40制限ありのf_a_xy_n">
			sum(1,m){D[x+index-1]*(1-qy(40))^(index-1)}/D[x]
		</formula>
		<formula name="f_a_k_xy_n_40" paras="x,n,m" fraction="5" desc="年齢40制限ありのf_a_k_xy_n">
			sum(1,m){D[x+index-1]*(1-qy(40))^(index-1)}/D[x]
			-
			(11/24)*((D[x]-D[x+m]*(1-qy(40))^m)/D[x])
		</formula>
		<!-- 下記の分割払いの係数定義は商品に問わずため、外部の共通commonフォルダに移す -->
		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="3" desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){0}
				elseIf(kaisu==2){12*d}
				elseIf(kaisu==3){6*d}
				else{d}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>
		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			if(kaisu==1){
				round(1/SBasePrate,4)
			}else{
				round(1/SBasePrate,2)
			}
		</formula>
	</Common>

	<Premium desc="保険料">
		<formula name="sg_P_nasho" desc="災害入院給付金部分">
			(v^(1/2)*sg_rho*sg_T*a_x_n(x,n)+sg_e*a_k_x_n(12,x,m)+sg_e*f_a_x_n(m,x,n))
			/
			(12*(1-zeta-epsilon)*f_a_k_xy_n_40(x,n,m))
		</formula>
		<formula name="sp_P_nasho" desc="疾病入院給付金部分">
			(v^(1/2)*sp_rho*sp_T*a_x_n(x,n)+sp_e*a_k_x_n(12,x,m)+sp_e*f_a_x_n(m,x,n))
			/
			(12*(1-beta-zeta-epsilon)*a_k_xy_n(12,x,y,m))
		</formula>
		<formula name="st_P_nasho" desc="手術給付金部分">
			(st_A_l*a_x_n(x,n)+st_e*a_k_x_n(12,x,m)+st_e*f_a_x_n(m,x,n))
			/
			(12*(1-beta-zeta-epsilon)*f_a_k_xy_n_40(x,n,m))
		</formula>

		<formula name="stdPrate" pvh="P" desc="基準Ｐレート">
			round{sg_P_nasho+sp_P_nasho+st_P_nasho,3}
		</formula>

		<formula name="PrateByYear" desc="年払Prate">
			stdPrate*PayFactor(2,gen,1)
		</formula>
		
		<formula name="Prate" accessable="true" pvh="P" desc="１．保険料レート">
			PrateByPaymode(stdPrate,0)
		</formula>
		
		<formula name="Premium" pvh="P" accessable="true" desc="２．保険料・保険金">
			<!-- 高額割引がゼロ 100円の位を切り上げ-->
			if(sptate==0){
				<!-- Ｐレートはゼロより小さい場合、ゼロとする -->
				roundDown(SA*max(PrateByPaymode(stdPrate,0),0),0)
			}else{
				roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,0)),0)/1000,0)*1000
			}
		</formula>
	</Premium>
	<ReserveFund desc="保険積立金">
		<formula name="sg_chu_V" paras="t" desc="期間中災害Ｖ">
			(v^(1/2)*sg_rho*sg_T+sg_e)*a_x_n(x+t,n-t)
			-
			(v^(1/2)*sg_rho*sg_T+sg_e)*a_x_n(x,n)*f_a_xy_n_40(x+t,n,m-t)/f_a_xy_n_40(x,n,m)
		</formula>
		<formula name="sp_chu_V" paras="t" desc="期間中疾病Ｖ">
			(v^(1/2)*sp_rho*sp_T+sp_e)*a_x_n(x+t,n-t)
			-
			(v^(1/2)*sp_rho*sp_T+sp_e)*a_x_n(x,n)*f_a_xy_n(x+t,y+t,n,m-t)/f_a_xy_n(x,y,n,m)
		</formula>
		<formula name="st_chu_V" paras="t" desc="期間中手術Ｖ">
			(st_A_l+st_e)*a_x_n(x+t,n-t)
			-
			(st_A_l+st_e)*a_x_n(x,n)*f_a_xy_n_40(x+t,n,m-t)/f_a_xy_n_40(x,n,m)
		</formula>
		<formula name="sg_go_V" paras="t" desc="終了後災害Ｖ">
			(v^(1/2)*sg_rho*sg_T+sg_e)*a_x_n(x+t,n-t)
		</formula>
		<formula name="sp_go_V" paras="t" desc="終了後疾病Ｖ">
			(v^(1/2)*sp_rho*sp_T+sp_e)*a_x_n(x+t,n-t)
		</formula>
		<formula name="st_go_V" paras="t" desc="終了後手術Ｖ">
			(st_A_l+st_e)*a_x_n(x+t,n-t)
		</formula>
		
		<formula name="st_chu" paras="t">
			max(
				round{
					sg_chu_V(t)+sp_chu_V(t)+st_chu_V(t)
				,2}
			,0)
		</formula>
		<formula name="st_go" paras="t">
			max(
				round{
					sg_go_V(t)+sp_go_V(t)+st_go_V(t)
				,2}
			,0)
		</formula>
		
		<formula name="Vrate_accu" paras="t" fraction="2" desc="保険年度末rate">
			if(state==1||state==6){
				<!-- 払込期間中まだは免除 -->
				st_chu(t)
			}elseIf(state==2){
				<!-- 払込期間終了後 -->
				st_go(t)
			}else{0}
		</formula>		
		<formula name="Vrate" paras="t" pvh="if(gen&lt;3){V}else{H}" fraction="2" accessable="true" desc="１．保険年度末Vレート">
			Vrate_accu(t)
		</formula>
		
		<!-- 契約者保険年度Vrate　ここから -->
		<formula name="ContractorYearV" fraction="2" paras="t" pvh="P" desc="契約者保険年度Vrate">
			Vrate_accu(t)
		</formula>	

		<!-- 契約者保険年度Vrate(保険料払込年数または経過年数が整数でない場合)　ここから -->
		<formula name="ContractorVrate" fraction="2" paras="t" pvh="P" accessable="true" desc="３．契約者用Vレート">
			if(state==1||state==6){
				<!-- 払込期間中まだは免除 -->
				round{(1-f_12(f1)),5}*ContractorYearV(t1)+round{(f_12(f1)),5}*ContractorYearV(t1+1)
			}elseIf(state==2){
				<!-- 払込期間終了後 -->
				round{(1-f_12(f)),5}*ContractorYearV(t)+round{(f_12(f)),5}*ContractorYearV(t+1)
			}else{0}
		</formula>
		
		<formula name="BizYearV" paras="t" fraction="4" accessable="false" desc="事業末Vレート">
			if(state==1){
				<!-- 払込期間中 -->
				st_chu(t)
            }elseIf(state==2||state==6){
				<!-- 払込期間終了後 まだは免除 -->
				st_go(t)
			}else{0}
		</formula>
		
		<formula name="BizYearVate" pvh="if(kisoritsu==0){P}elseIf(kisoritsu==1){V}else{H}" accessable="true" desc="２．事業年度末Vレート">
			BizYearV(t)
		</formula>
		
	</ReserveFund>
	
	<!-- 解約返戻金　ここから -->
	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate" paras="t" pvh="P">
			if(state==1||state==6){
				<!-- 払込期間中まだは免除 -->
				max(ContractorYearV(t),0)
			}elseIf(state==2){
				<!-- 払込期間終了後 -->
				ContractorYearV(t)
			}else{0}		
		</formula>	
		<formula name="Wrate" fraction="2" accessable="true" pvh="P" desc="１．解約返戻金Wレート">
			<formula name="sigma" paras="t" desc="解約控除率σ">
				if(t&lt;3){1-m/n}else{1}
			</formula>
			<formula name="Wrate_Overbar1">
				if(12*t1+f1-12*t-f&lt;0){
					<!-- 払込年月数-経過年月数<0の場合、t,fをt1,f1に読み替え -->
					if(t1&lt;3){
						round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),2)*(n-m)/n
					}else{
						(1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1)
					}
				}else{
					if(t&lt;3){
						round((1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1),2)*(n-m)/n
					}else{
						(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
					}
				}
			</formula>
			<formula name="Wrate_Overbar2">
				if(t1&lt;3){
					v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),2)*(n-m)/n
				}else{
					v^ve*round((1-f_12(f1))*tWrate(t1)+f_12(f1)*tWrate(t1+1),2)
				}
			</formula>
			if(state==1 || state==6){
				<!-- 払込期間中まだは免除 -->
				if(PremiumAbolishSign==1){
					Wrate_Overbar1
				}else{
					Wrate_Overbar2
				}	
			}elseIf(state==2){
				<!-- 払込期間終了後 -->
				(1-f_12(f))*tWrate(t)+f_12(f)*tWrate(t+1)
			}else(0)
		</formula>
	</SurrenderFee>	
</Formula-definition>