<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Formula-definition SYSTEM "Formula-definition.dtd">
	<!-- 商品毎に計算公式はここに定義する -->
<Formula-definition>
	<BizExpenses desc="事業費率の設定">
		<!-- 予定事業費率 -->
		<!-- 維持費 -->
		<formula name="ah_gamma" value="0.108" desc="災害入院給付金部分γ" />
		<formula name="sh_gamma" value="0.129" desc="疾病入院給付金部分γ" />
		<formula name="o_gamma" value="0.082" desc="手術等給付金部分γ" />
		<!--統計側用予定解約率 -->
		<formula name="qwt" paras="kisoritsu" desc="予定解約率">
			if(t&lt;m){
				if(kisoritsu==0){
					0.03
				}else{
					0.015
				}
			}else{
				if(kisoritsu==0){
					0.001
				}else{
					0.0
				}
			}
		</formula>

		<!-- 集金費 -->
		<formula name="beta" desc="集金費β">
			round{0.15+(0.05/10)*min{max{x-40,0},10},3}
		</formula>
		<formula name="zeta" value="0.025" desc="集金費ζ" />

		<!-- Ｐ免費用 -->
		<formula name="epsilon" paras="m" desc="Ｐ免費用ε">
			if(m&lt;=5){
				0.00075
			}elseIf(m&gt;5&amp;&amp;m&lt;=10){
				0.0015
			}else{
				0.003
			}
		</formula>
	</BizExpenses>

	<Common desc="商品内部の共通公式">
		<formula name="SH_MT" paras="x" desc="SH_MT給付日付に応じて基数を返す">
			if(hospitalDays==30){
				SH_MT30[x]
			}elseIf(hospitalDays==60){
				SH_MT60[x]
			}else{
				SH_MT120[x]
			}
		</formula>
		<formula name="SH_Mt" paras="x" desc="SH_Mt給付日付に応じて基数を返す">
			if(hospitalDays==30){
				SH_Mt30[x]
			}elseIf(hospitalDays==60){
				SH_Mt60[x]
			}else{
				SH_Mt120[x]
			}
		</formula>
		<formula name="AH_MT" paras="x" desc="AH_MT給付日付に応じて基数を返す">
			if(hospitalDays==30){
				AH_MT30[x]
			}elseIf(hospitalDays==60){
				AH_MT60[x]
			}else{
				AH_MT120[x]
			}
		</formula>
		<formula name="AH_Mt" paras="x" desc="AH_Mt給付日付に応じて基数を返す">
			if(hospitalDays==30){
				AH_Mt30[x]
			}elseIf(hospitalDays==60){
				AH_Mt60[x]
			}else{
				AH_Mt120[x]
			}
		</formula>

		<!-- 保険期間  -->
		<formula name="n1" desc="保険期間(編集後)">
			if(n==99){
				omega-x+1
			}else{
				n
			}
		</formula>
		<!-- 払込期間  -->
		<formula name="m1" desc="払込期間(編集後)">
			if(m==99){
				omega-x+1
			}else{
				m
			}
		</formula>

		<!--　生命年金現価　ここから　-->
		<formula name="at_x_n" paras="x,n" fraction="5">
			(Nt[x]-Nt[x+n])/Dt[x]
		</formula>
		<formula name="a_nashu_x_n" paras="x,n" fraction="5" desc="a_nashu_x_n">
			aT_x_n(x,m1)+DT[x+m1]/DT[x]*at_x_n(x+m1,n1-m1)
		</formula>
		<formula name="mt_atau_xt_nm" paras="x,n,m,t" fraction="5"
			desc="mt_atau_xt_nm">
			if(n==m){
				(NT[x+m]-NT[x+n])/DT[x+t]
			}elseIf(n&gt;m&amp;&amp;t&lt;m){
				DT[x+m]/DT[x+t]*((Nt[x+m]-Nt[x+n])/Dt[x+m])
			}else{
				0
			}
		</formula>
		<formula name="m_at_x_nm" paras="x,n,m" fraction="5" desc="m_at_x_nm">
			if(n==m){
				(NT[x+m]-NT[x+n])/DT[x]
			}elseIf(n&gt;m){
				DT[x+m]/DT[x]*((Nt[x+m]-Nt[x+n])/Dt[x+m])
			}else{
				0
			}
		</formula>

		<!-- 給付現価、ここから -->
		<formula name="sh_Ai_x_n" paras="x,n" fraction="6" desc="sh_Ai_x_n">
			(SH_MT(x)-SH_MT(x+m1))/DT[x]+DT[x+m1]/DT[x]*(SH_Mt(x+m1)-SH_Mt(x+n))/Dt[x+m]
		</formula>
		<formula name="sh_Ai_xt_nt" paras="x,n,t" fraction="6" desc="sh_Ai_xt_nt">
			if(n==m1){
				(SH_MT(x+t)-SH_MT(x+n))/DT[x+t]
			}elseIf(n&gt;m1&amp;&amp;t&lt;m1){
				(SH_MT(x+t)-SH_MT(x+m1))/DT[x+t]+DT[x+m1]/DT[x+t]*(SH_Mt(x+m1)-SH_Mt(x+n))/Dt[x+m1]
			}else{
				(SH_Mt(x+t)-SH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		<formula name="sh_Ai_xt_nt_E" paras="x,n,t" fraction="6" desc="sh_Ai_xt_nt(免除)">
			if(n&gt;m1&amp;&amp;t&lt;m1){
				(SH_Mt(x+t)-SH_Mt(x+m1))/Dt[x+t]+Dt[x+m1]/Dt[x+t]*(SH_Mt(x+m1)-SH_Mt(x+n))/Dt[x+m1]
			}else{
				(SH_Mt(x+t)-SH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		<formula name="ah_Ai_x_n" paras="x,n" fraction="6" desc="ah_Ai_x_n">
			(AH_MT(x)-AH_MT(x+m1))/DT[x]+DT[x+m1]/DT[x]*(AH_Mt(x+m1)-AH_Mt(x+n))/Dt[x+m1]
		</formula>
		<formula name="ah_Ai_xt_nt" paras="x,n,t" fraction="6" desc="ah_Ai_xt_nt">
			if(n==m1){
				(AH_MT(x+t)-AH_MT(x+n))/DT[x+t]
			}elseIf(n&gt;m1&amp;&amp;t&lt;m1){
				(AH_MT(x+t)-AH_MT(x+m1))/DT[x+t]+DT[x+m1]/DT[x+t]*(AH_Mt(x+m1)-AH_Mt(x+n))/Dt[x+m1]
			}else{
				(AH_Mt(x+t)-AH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		<formula name="ah_Ai_xt_nt_E" paras="x,n,t" fraction="6" desc="ah_Ai_xt_nt(免除)">
			if(n&gt;m1&amp;&amp;t&lt;m1){
				(AH_Mt(x+t)-AH_Mt(x+m1))/Dt[x+t]+Dt[x+m1]/Dt[x+t]*(AH_Mt(x+m1)-AH_Mt(x+n))/Dt[x+m1]
			}else{
				(AH_Mt(x+t)-AH_Mt(x+n))/Dt[x+t]
			}
		</formula>
		<formula name="o_A_x_n" paras="x,n" fraction="6" desc="o_A_x_n">
			(O_MT[x]-O_MT[x+m1])/DT[x]+DT[x+m1]/DT[x]*(O_Mt[x+m1]-O_Mt[x+n])/Dt[x+m1]
		</formula>
		<formula name="o_A_xt_nt" paras="x,n,t" fraction="6" desc="o_A_xt_nt">
			if(n==m1){
				(O_MT[x+t]-O_MT[x+n])/DT[x+t]
			}elseIf(n&gt;m1&amp;&amp;t&lt;m1){
				(O_MT[x+t]-O_MT[x+m1])/DT[x+t]+DT[x+m1]/DT[x+t]*(O_Mt[x+m1]-O_Mt[x+n])/Dt[x+m1]
			}else{
				(O_Mt[x+t]-O_Mt[x+n])/Dt[x+t]
			}
		</formula>
		<formula name="o_A_xt_nt_E" paras="x,n,t" fraction="6" desc="o_A_xt_nt(免除)">
			if(n&gt;m1&amp;&amp;t&lt;m1){
				(O_Mt[x+t]-O_Mt[x+m1])/Dt[x+t]+Dt[x+m1]/Dt[x+t]*(O_Mt[x+m1]-O_Mt[x+n])/Dt[x+m1]
			}else{
				(O_Mt[x+t]-O_Mt[x+n])/Dt[x+t]
			}
		</formula>
		<formula name="m_Awd_x_n" paras="x,n,m" fraction="6" desc="m_Awd_x_n">
			DT[x+m]/DT[x]*(Mwd[x+m]-Mwd[x+n])/Dt[x+m]
		</formula>
		<formula name="Awd_x_n" paras="x,n,t" fraction="6" desc="Awd_x_n">
			if(n==m1){
				0
			}else{
				(Mwd[x+t]-Mwd[x+n])/Dt[x+t]
			}
		</formula>

		<formula name="PrateByPaymode" paras="stdPrate,d" fraction="3"
			desc="払込方法別Prate">
			<!-- 基準Prateと高額割引dより、払込方法別Prateを求める -->
			<formula name="Discount" paras="d" desc="高額割引">
				if(kaisu==1){
					0
				}elseIf(kaisu==2){
					12*d
				}elseIf(kaisu==3){
					6*d
				}else{
					d
				}
			</formula>
			stdPrate*PayFactor(kaisu,gen,keiro)-Discount(d)
		</formula>

		<formula name="S2P" paras="SBasePrate" desc="S基準からP基準に変換する">
			round(1/SBasePrate,2)
		</formula>
	</Common>

	<!-- 保険料　ここから -->
	<Premium desc="保険料">
		<formula name="stdPrate" pvh="P" accessable="false" desc="基準Ｐレート">
			round{(sh_Ai_x_n(x,n1)+ah_Ai_x_n(x,n1)+10*o_A_x_n(x,n1)+30*m_Awd_x_n(x,n1,m1)
			+(sh_gamma+ah_gamma+o_gamma)*a_nashu_x_n(x,n1))/{12*(1-beta-zeta-epsilon(m1))
			*aT12_x_n(x,m1)},3}
		</formula>

		<formula name="Prate" pvh="P" accessable="true" desc="１.保険料レート">
			PrateByPaymode(stdPrate,0)	
		</formula>
		<formula name="Premium" pvh="P" accessable="true" desc="２.保険料/保険金額">
			<!-- 高額割引がゼロ 100円の位を切り上げ-->
			if(sptate==0){
				<!-- Ｐレートはゼロより小さい場合、ゼロとする -->
				roundDown(SA*max{PrateByPaymode(stdPrate,0),0},0)
			}else{
				roundUp(roundDown(SA*S2P(PrateByPaymode(stdPrate,0)),0)/1000,0)*1000
			}
		</formula>
	</Premium>

	<ReserveFund desc="保険積立金">
		<formula name="BenifitPostponingV" paras="t" fraction="2" desc="保険料払込期間中">
	        max{sh_Ai_xt_nt(x,n1,t)+ah_Ai_xt_nt(x,n1,t)+10*o_A_xt_nt(x,n1,t)
				+30*m_Awd_x_n(x+t,n1-t,m1-t)+(sh_gamma+ah_gamma+o_gamma)*mt_atau_xt_nm(x,n1,m1,t)
				-(sh_Ai_x_n(x,n1)+ah_Ai_x_n(x,n1)+10*o_A_x_n(x,n1)+30*m_Awd_x_n(x,n1,m1)
				+(sh_gamma+ah_gamma+o_gamma)*m_at_x_nm(x,n1,m1))/aT_x_n(x,m1)*aT_x_n(x+t,m1-t)
			,0}
		</formula>
		<formula name="BenifitStartedV"  paras="t" fraction="2" desc="保険料払込期間終了後">
			sh_Ai_xt_nt(x,n1,t)+ah_Ai_xt_nt(x,n1,t)+10*o_A_xt_nt(x,n1,t)
			+30*Awd_x_n(x,n1,t)+(sh_gamma+ah_gamma+o_gamma)*at_x_n(x+t,n1-t)
		</formula>
		<formula name="Exemption"  paras="t" fraction="2" desc="保険料免除">
			<!-- 事業末の免除状態の予定解約率は（保険料払込期間終了後）を使用する。 -->
			sh_Ai_xt_nt_E(x,n1,t)+ah_Ai_xt_nt_E(x,n1,t)+10*o_A_xt_nt_E(x,n1,t)
			+30*Awd_x_n(x,n1,t)+(sh_gamma+ah_gamma+o_gamma)*at_x_n(x+t,n1-t)
		</formula>
		<formula name="Vrate_accu" paras="t" desc="保険年度Vrate">
			if(state==1){
				BenifitPostponingV(t)
			}elseIf(state==2){
				BenifitStartedV(t)
			}else{
				0
			}
		</formula>
		<formula name="Vrate" paras="t" pvh="H" accessable="true" fraction="2" desc="１．保険年度末Vレート">
			Vrate_accu(t)
		</formula>

		<formula name="ContractorYearV" pvh="P" paras="t" fraction="2" desc="契約者用Vレート">
			Vrate_accu(t)
		</formula>

		<formula name="ContractorVrate" pvh="P" fraction="2" accessable="true" desc="３．契約者用Vレート">
			if(state==1){
			<!--保険料払込期間中 -->
				(1-f_12(f1))*ContractorYearV(t1)+f_12(f1)*ContractorYearV(t1+1)
			}elseIf(state==2){
			<!-- 保険料払込期間終了後  -->
				(1-f_12(f))*ContractorYearV(t)+f_12(f)*ContractorYearV(t+1)
			}else{
				0
			}
		</formula>
		
		<formula name="yearPrate" fraction="3" pvh="P" desc="年払 Prate">
			stdPrate*PayFactor(2,gen,1)
		</formula>
		<formula name="BizYearV" paras="t" fraction="2" accessable="false" desc="事業末Vレート">
			if(state==1){
				if(round{(sh_Ai_x_n(x,n1)+ah_Ai_x_n(x,n1)+10*o_A_x_n(x,n1)+30*m_Awd_x_n(x,n1,m1)
					+(sh_gamma+ah_gamma+o_gamma)*m_at_x_nm(x,n1,m1))/aT_x_n(x,m1),3}&lt;=yearPrate){
						max{sh_Ai_xt_nt(x,n1,t)+ah_Ai_xt_nt(x,n1,t)+10*o_A_xt_nt(x,n1,t)
						+30*m_Awd_x_n(x+t,n1-t,m1-t)+(sh_gamma+ah_gamma+o_gamma)*mt_atau_xt_nm(x,n1,m1,t)
						-((sh_Ai_x_n(x,n1)+ah_Ai_x_n(x,n1)+10*o_A_x_n(x,n1)+30*m_Awd_x_n(x,n1,m1)
						+(sh_gamma+ah_gamma+o_gamma)*m_at_x_nm(x,n1,m1))/aT_x_n(x,m1))*aT_x_n(x+t,m1-t),0}
				}else{
					max{sh_Ai_xt_nt(x,n1,t)+ah_Ai_xt_nt(x,n1,t)+10*o_A_xt_nt(x,n1,t)
					+30*m_Awd_x_n(x+t,n1-t,m1-t)+(sh_gamma+ah_gamma+o_gamma)*mt_atau_xt_nm(x,n1,m1,t)
					-yearPrate*aT_x_n(x+t,m1-t),0}
				}				
			}elseIf(state==2){
				BenifitStartedV(t)
			}elseIf(state==6){
				Exemption(t)
			}else{
				0
			}
		</formula>
		
		<formula name="BizYearVate" pvh="if(kisoritsu==0){P}elseIf(kisoritsu==1){V}else{H}" accessable="true" desc="２．事業年度末Vレート">
			BizYearV(t)
		</formula>

	</ReserveFund>

	<SurrenderFee desc="解約返戻金">
		<formula name="tWrate" pvh="P" desc="tWrate">
			<!-- 払込終了後 -->
			if(state==2){
				30
			}else{
			<!-- 払込中  -->
				0
			}
		</formula>
		<formula name="Wrate" pvh="P" accessable="true" desc="１.解約返戻金Ｗレート">
			tWrate
		</formula>
	</SurrenderFee>
</Formula-definition>